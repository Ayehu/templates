<?xml version="1.0" encoding="utf-8"?>
<Workflow>
  <WorkflowInfo Name="Create password never expires report" Description="Create report about users which password never expires" Details="" XML="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&lt;SequentialWorkflowActivity x:Name=&quot;CustomWorkflow&quot; xmlns:ns0=&quot;clr-namespace:MemorySet;Assembly=MemorySet, Version=2.0.0.0, Culture=neutral, PublicKeyToken=null&quot; xmlns:ns1=&quot;clr-namespace:ADListOU;Assembly=ADListOU, Version=2.0.0.0, Culture=neutral, PublicKeyToken=null&quot; xmlns:ns2=&quot;clr-namespace:ResultSetFilter;Assembly=ResultSetFilter, Version=2.0.0.0, Culture=neutral, PublicKeyToken=null&quot; xmlns:ns3=&quot;clr-namespace:GetRowsCount;Assembly=GetRowsCount, Version=2.0.0.0, Culture=neutral, PublicKeyToken=null&quot; xmlns:ns4=&quot;clr-namespace:SendEmail;Assembly=SendEmail, Version=2.0.0.0, Culture=neutral, PublicKeyToken=null&quot; xmlns:ns5=&quot;clr-namespace:ExitWhile;Assembly=ExitWhile, Version=2.0.0.0, Culture=neutral, PublicKeyToken=null&quot; xmlns:ns6=&quot;clr-namespace:GetCellValue;Assembly=GetCellValue, Version=2.0.0.0, Culture=neutral, PublicKeyToken=null&quot; xmlns:ns7=&quot;clr-namespace:ADPassExpDaysLeft;Assembly=ADPassExpDaysLeft, Version=2.0.0.0, Culture=neutral, PublicKeyToken=null&quot; xmlns:ns8=&quot;clr-namespace:ReturnValue;Assembly=ReturnValue, Version=2.0.0.0, Culture=neutral, PublicKeyToken=null&quot; xmlns:x=&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot; xmlns=&quot;http://schemas.microsoft.com/winfx/2006/xaml/workflow&quot; x:Class=&quot;WorkflowDesignerControl.CustomWorkflow&quot;&gt;&lt;ns0:MemorySet IsValid=&quot;True&quot; VariableScope=&quot;Workflow&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; VariableValue=&quot;users defined with password never expires report&amp;#xD;&amp;#xA;----------------------------------------------------------------------------&quot; DisplayName=&quot;Set Memory&quot; IsAppend=&quot;False&quot; VariableName=&quot;Report&quot; x:Name=&quot;memorySet1&quot; Description=&quot;Set variable to specified memory scope.&quot; TypeName=&quot;MemorySet&quot; IsSaved=&quot;False&quot; /&gt;&lt;ns1:ADListOU IsValid=&quot;True&quot; x:Name=&quot;adListOU1&quot; HostName=&quot;AD-SERVER&quot; TimeInSeconds=&quot;0&quot; Timeout=&quot;00:01:00&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; DisplayName=&quot;AD List OU&quot; Recursive=&quot;{x:Null}&quot; Path=&quot;\Users&quot; Password=&quot;&quot; OUName=&quot;{x:Null}&quot; Description=&quot;Active directory List OU.&quot; HostId=&quot;40&quot; TypeName=&quot;ADListOU&quot; UserName=&quot;&quot; /&gt;&lt;ns2:ResultSetFilter IsValid=&quot;True&quot; x:Name=&quot;resultSetFilter1&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; Timeout=&quot;00:01:00&quot; DisplayName=&quot;ResultSet Filter&quot; VariableName=&quot;%adListOU1%&quot; Description=&quot;Filter a Result Set&quot; TypeName=&quot;ResultSetFilter&quot; FilterStatement=&quot;Type = 'User'&quot; /&gt;&lt;ns3:GetRowsCount IsValid=&quot;True&quot; x:Name=&quot;getRowsCount1&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; ResultSet=&quot;%resultSetFilter1%&quot; DisplayName=&quot;Get Rows Count&quot; ResultSetName=&quot;resultSetFilter1&quot; Description=&quot;Gets the amount of rows in a resultset.&quot; TypeName=&quot;GetRowsCount&quot; /&gt;&lt;WhileActivity x:Name=&quot;whileActivity1&quot; Condition=&quot;{x:Null}&quot;&gt;&lt;SequenceActivity x:Name=&quot;sequenceActivity1&quot;&gt;&lt;ns5:ExitWhile IsValid=&quot;True&quot; x:Name=&quot;exitWhile1&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; Counter=&quot;%getRowsCount1%&quot; Description=&quot;Exit current while activity&quot; DisplayName=&quot;Exit While&quot; TypeName=&quot;ExitWhile&quot; /&gt;&lt;ns6:GetCellValue ColumnType=&quot;Number&quot; IsValid=&quot;True&quot; x:Name=&quot;UserName&quot; ColumnNumber=&quot;1&quot; ResultSet=&quot;%resultSetFilter1%&quot; RowNumber=&quot;%exitWhile1%&quot; ResultSetName=&quot;resultSetFilter1&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; Description=&quot;Gets a specific cell value from a resultset.&quot; DisplayName=&quot;Get Cell Value&quot; TypeName=&quot;GetCellValue&quot; /&gt;&lt;ns7:ADPassExpDaysLeft IsValid=&quot;True&quot; Days=&quot;30&quot; ADUserName=&quot;%UserName%&quot; TimeInSeconds=&quot;0&quot; x:Name=&quot;adPassExpDaysLeft1&quot; Timeout=&quot;00:01:00&quot; HostName=&quot;AD-SERVER&quot; DisplayName=&quot;AD Password Expiration Days Left&quot; Path=&quot;{x:Null}&quot; Password=&quot;&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; Description=&quot;Active directory returns the number of days left before password expires.&quot; HostId=&quot;40&quot; TypeName=&quot;ADPassExpDaysLeft&quot; UserName=&quot;&quot; /&gt;&lt;IfElseActivity x:Name=&quot;ifElseActivity1&quot;&gt;&lt;IfElseBranchActivity x:Name=&quot;ifElseBranchActivity1&quot;&gt;&lt;ns8:ReturnValue Value=&quot;Password never expires&quot; IsValid=&quot;True&quot; x:Name=&quot;returnValue1&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; ConditionName=&quot;&quot; UseBranchWhenTimeout=&quot;False&quot; UseStoredValue=&quot;False&quot; ConditionType=&quot;Contains&quot; DisplayName=&quot;Return Value&quot; Formula=&quot;=Contains(&amp;quot;&amp;amp;&amp;amp;&amp;amp;&amp;quot;,&amp;quot;Password never expires&amp;quot;)&quot; Description=&quot;Use a returned value of a previous activity.&quot; ConditionNumber=&quot;-1&quot; UseCustomeCondition=&quot;False&quot; Type=&quot;UserDefinedValue&quot; TypeName=&quot;ReturnValue&quot; /&gt;&lt;ns0:MemorySet IsValid=&quot;True&quot; VariableScope=&quot;Workflow&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; VariableValue=&quot;%UserName%&quot; DisplayName=&quot;Set Memory&quot; IsAppend=&quot;True&quot; VariableName=&quot;Report&quot; x:Name=&quot;memorySet2&quot; Description=&quot;Set variable to specified memory scope.&quot; TypeName=&quot;MemorySet&quot; IsSaved=&quot;False&quot; /&gt;&lt;/IfElseBranchActivity&gt;&lt;IfElseBranchActivity x:Name=&quot;ifElseBranchActivity2&quot;&gt;&lt;ns8:ReturnValue Value=&quot;Default Branch&quot; IsValid=&quot;True&quot; x:Name=&quot;returnValue2&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; ConditionName=&quot;&quot; UseBranchWhenTimeout=&quot;True&quot; UseStoredValue=&quot;True&quot; ConditionType=&quot;&quot; DisplayName=&quot;Return Value&quot; Formula=&quot;{x:Null}&quot; Description=&quot;Use a returned value of a previous activity.&quot; ConditionNumber=&quot;0&quot; UseCustomeCondition=&quot;False&quot; Type=&quot;StoredValue&quot; TypeName=&quot;ReturnValue&quot; /&gt;&lt;/IfElseBranchActivity&gt;&lt;/IfElseActivity&gt;&lt;/SequenceActivity&gt;&lt;/WhileActivity&gt;&lt;ns4:SendEmail Channel=&quot;0&quot; TimeInSeconds=&quot;0&quot; Subject=&quot;Users which are defined with password never expires&quot; DestinationNumber=&quot;1&quot; x:Name=&quot;sendEmail1&quot; TemplateNumber=&quot;0&quot; ShiftLevel=&quot;&quot; IsValid=&quot;True&quot; HostId=&quot;0&quot; TemplateName=&quot;&quot; TypeName=&quot;SendEmail&quot; SendRN=&quot;False&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; DestinationTypeCc=&quot;User&quot; DestinationType=&quot;User&quot; HostName=&quot;{x:Null}&quot; Timeout=&quot;00:00:00&quot; DisplayName=&quot;Send Email&quot; Attachments=&quot;&quot; Cc=&quot;&quot; Description=&quot;Send an email to a user, group or duty.&quot; Continue=&quot;False&quot; DestinationNumberCc=&quot;0&quot; Body=&quot;&amp;lt;!DOCTYPE HTML PUBLIC &amp;quot;-//W3C//DTD HTML 4.0 Transitional//EN&amp;quot;&amp;gt;&amp;#xD;&amp;#xA;&amp;lt;HTML&amp;gt;&amp;lt;HEAD&amp;gt;&amp;#xD;&amp;#xA;&amp;lt;META content=&amp;quot;text/html; charset=utf-8&amp;quot; http-equiv=Content-Type&amp;gt;&amp;#xD;&amp;#xA;&amp;lt;META name=GENERATOR content=&amp;quot;MSHTML 10.00.9200.16618&amp;quot;&amp;gt;&amp;lt;/HEAD&amp;gt;&amp;#xD;&amp;#xA;&amp;lt;BODY style=&amp;quot;BACKGROUND-COLOR: white&amp;quot;&amp;gt;%Report%&amp;lt;/BODY&amp;gt;&amp;lt;/HTML&amp;gt;&amp;#xD;&amp;#xA;&quot; To=&quot;Admin&quot; ShiftLevelCc=&quot;&quot; MessageType=&quot;Custom&quot; /&gt;&lt;/SequentialWorkflowActivity&gt;" />
  <Tags>
    <Tag id="1" name="Active Directory">
    </Tag>
    <Tag id="51" name="Passwords">
    </Tag>
    <Tag id="54" name="Report">
    </Tag>
  </Tags>
</Workflow>