<?xml version="1.0" encoding="utf-8"?>
<Workflow>
  <WorkflowInfo Name="Create power off VMs List" Description="Create a list of virtual machines is power off state" Details="" XML="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&lt;SequentialWorkflowActivity x:Name=&quot;CustomWorkflow&quot; xmlns:ns0=&quot;clr-namespace:CreateMemoryTable;Assembly=CreateMemoryTable, Version=1.3.0.0, Culture=neutral, PublicKeyToken=null&quot; xmlns:ns1=&quot;clr-namespace:VMList;Assembly=VMList, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null&quot; xmlns:ns2=&quot;clr-namespace:GetRowsCount;Assembly=GetRowsCount, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null&quot; xmlns:ns3=&quot;clr-namespace:GetDate;Assembly=GetDate, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null&quot; xmlns:ns4=&quot;clr-namespace:WriteXLS;Assembly=WriteXLS, Version=1.1.0.0, Culture=neutral, PublicKeyToken=null&quot; xmlns:ns5=&quot;clr-namespace:ConvertToHTMLTable;Assembly=ConvertToHTMLTable, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null&quot; xmlns:ns6=&quot;clr-namespace:SendEmail;Assembly=SendEmail, Version=1.2.0.0, Culture=neutral, PublicKeyToken=null&quot; xmlns:ns7=&quot;clr-namespace:ExitWhile;Assembly=ExitWhile, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null&quot; xmlns:ns8=&quot;clr-namespace:GetCellValue;Assembly=GetCellValue, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null&quot; xmlns:ns9=&quot;clr-namespace:VMPowerState;Assembly=VMPowerState, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null&quot; xmlns:ns10=&quot;clr-namespace:ReturnValue;Assembly=ReturnValue, Version=1.2.0.0, Culture=neutral, PublicKeyToken=null&quot; xmlns:ns11=&quot;clr-namespace:SetCellValue;Assembly=SetCellValue, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null&quot; xmlns:ns12=&quot;clr-namespace:AddMemoryTableRow;Assembly=AddMemoryTableRow, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null&quot; xmlns:ns13=&quot;clr-namespace:Continue;Assembly=Continue, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null&quot; xmlns:x=&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot; xmlns=&quot;http://schemas.microsoft.com/winfx/2006/xaml/workflow&quot; x:Class=&quot;WorkflowDesignerControl.CustomWorkflow&quot;&gt;&lt;ns0:CreateMemoryTable IsValid=&quot;True&quot; x:Name=&quot;createMemoryTable1&quot; ColumnNumber=&quot;2&quot; TableName=&quot;Report&quot; RowNumber=&quot;1&quot; isEmptyGrid=&quot;0&quot; Description=&quot;Creates a memory table.&quot; DisplayName=&quot;Create Memory Table&quot; TypeName=&quot;CreateMemoryTable&quot; TableAsString=&quot;&amp;lt;NewDataSet&amp;gt;&amp;#xD;&amp;#xA;  &amp;lt;xs:schema id=&amp;quot;NewDataSet&amp;quot; xmlns=&amp;quot;&amp;quot; xmlns:xs=&amp;quot;http://www.w3.org/2001/XMLSchema&amp;quot; xmlns:msdata=&amp;quot;urn:schemas-microsoft-com:xml-msdata&amp;quot;&amp;gt;&amp;#xD;&amp;#xA;    &amp;lt;xs:element name=&amp;quot;NewDataSet&amp;quot; msdata:IsDataSet=&amp;quot;true&amp;quot; msdata:MainDataTable=&amp;quot;resultSet&amp;quot; msdata:UseCurrentLocale=&amp;quot;true&amp;quot;&amp;gt;&amp;#xD;&amp;#xA;      &amp;lt;xs:complexType&amp;gt;&amp;#xD;&amp;#xA;        &amp;lt;xs:choice minOccurs=&amp;quot;0&amp;quot; maxOccurs=&amp;quot;unbounded&amp;quot;&amp;gt;&amp;#xD;&amp;#xA;          &amp;lt;xs:element name=&amp;quot;resultSet&amp;quot;&amp;gt;&amp;#xD;&amp;#xA;            &amp;lt;xs:complexType&amp;gt;&amp;#xD;&amp;#xA;              &amp;lt;xs:sequence&amp;gt;&amp;#xD;&amp;#xA;                &amp;lt;xs:element name=&amp;quot;ServerName&amp;quot; type=&amp;quot;xs:string&amp;quot; minOccurs=&amp;quot;0&amp;quot; /&amp;gt;&amp;#xD;&amp;#xA;                &amp;lt;xs:element name=&amp;quot;PowerState&amp;quot; type=&amp;quot;xs:string&amp;quot; minOccurs=&amp;quot;0&amp;quot; /&amp;gt;&amp;#xD;&amp;#xA;              &amp;lt;/xs:sequence&amp;gt;&amp;#xD;&amp;#xA;            &amp;lt;/xs:complexType&amp;gt;&amp;#xD;&amp;#xA;          &amp;lt;/xs:element&amp;gt;&amp;#xD;&amp;#xA;        &amp;lt;/xs:choice&amp;gt;&amp;#xD;&amp;#xA;      &amp;lt;/xs:complexType&amp;gt;&amp;#xD;&amp;#xA;    &amp;lt;/xs:element&amp;gt;&amp;#xD;&amp;#xA;  &amp;lt;/xs:schema&amp;gt;&amp;#xD;&amp;#xA;  &amp;lt;resultSet&amp;gt;&amp;#xD;&amp;#xA;    &amp;lt;ServerName /&amp;gt;&amp;#xD;&amp;#xA;    &amp;lt;PowerState /&amp;gt;&amp;#xD;&amp;#xA;  &amp;lt;/resultSet&amp;gt;&amp;#xD;&amp;#xA;&amp;lt;/NewDataSet&amp;gt;&quot; /&gt;&lt;ns1:VMList IsValid=&quot;True&quot; x:Name=&quot;vmList1&quot; TimeInSeconds=&quot;0&quot; Timeout=&quot;00:01:00&quot; HostName=&quot;vCenter&quot; DisplayName=&quot;VM List&quot; Password=&quot;&quot; Description=&quot;Get list of virtual machine names&quot; HostId=&quot;86&quot; TypeName=&quot;VMList&quot; UserName=&quot;&quot; /&gt;&lt;ns2:GetRowsCount IsValid=&quot;True&quot; x:Name=&quot;getRowsCount1&quot; ResultSet=&quot;%vmList1%&quot; ResultSetName=&quot;vmList1&quot; Description=&quot;Gets the amount of rows in a resultset.&quot; DisplayName=&quot;Get Rows Count&quot; TypeName=&quot;GetRowsCount&quot; /&gt;&lt;WhileActivity x:Name=&quot;whileActivity1&quot; Condition=&quot;{x:Null}&quot;&gt;&lt;SequenceActivity x:Name=&quot;sequenceActivity1&quot;&gt;&lt;ns7:ExitWhile DisplayName=&quot;Exit While&quot; x:Name=&quot;exitWhile1&quot; Description=&quot;Exit current while activity&quot; IsValid=&quot;True&quot; TypeName=&quot;ExitWhile&quot; Counter=&quot;%getRowsCount1%&quot; /&gt;&lt;ns8:GetCellValue IsValid=&quot;True&quot; x:Name=&quot;ServerName&quot; ColumnNumber=&quot;1&quot; ResultSet=&quot;%vmList1%&quot; RowNumber=&quot;%exitWhile1%&quot; ResultSetName=&quot;vmList1&quot; Description=&quot;Gets a specific cell value from a resultset.&quot; DisplayName=&quot;Get Cell Value&quot; TypeName=&quot;GetCellValue&quot; /&gt;&lt;ns9:VMPowerState IsValid=&quot;True&quot; x:Name=&quot;vmPowerState1&quot; HostName=&quot;vCenter&quot; TimeInSeconds=&quot;0&quot; Timeout=&quot;00:01:00&quot; DisplayName=&quot;VM Power State&quot; Password=&quot;&quot; Description=&quot;Get power state of a virtual machine&quot; HostId=&quot;86&quot; TypeName=&quot;VMPowerState&quot; UserName=&quot;&quot; VMName=&quot;%ServerName%&quot; /&gt;&lt;IfElseActivity x:Name=&quot;ifElseActivity1&quot;&gt;&lt;IfElseBranchActivity x:Name=&quot;ifElseBranchActivity1&quot;&gt;&lt;ns10:ReturnValue Value=&quot;Off&quot; IsValid=&quot;True&quot; x:Name=&quot;returnValue1&quot; ConditionName=&quot;&quot; UseBranchWhenTimeout=&quot;False&quot; UseStoredValue=&quot;False&quot; ConditionType=&quot;Equals&quot; DisplayName=&quot;Return Value&quot; Formula=&quot;=Equals(&amp;quot;&amp;amp;&amp;amp;&amp;amp;&amp;quot;,&amp;quot;Off&amp;quot;)&quot; Description=&quot;Use a returned value of a previous activity.&quot; ConditionNumber=&quot;-1&quot; UseCustomeCondition=&quot;False&quot; Type=&quot;UserDefinedValue&quot; TypeName=&quot;ReturnValue&quot; /&gt;&lt;ns2:GetRowsCount IsValid=&quot;True&quot; x:Name=&quot;RowsNumber&quot; ResultSet=&quot;%Report%&quot; ResultSetName=&quot;Report&quot; Description=&quot;Gets the amount of rows in a resultset.&quot; DisplayName=&quot;Get Rows Count&quot; TypeName=&quot;GetRowsCount&quot; /&gt;&lt;ns11:SetCellValue IsValid=&quot;True&quot; ColNumber=&quot;1&quot; NewValue=&quot;%ServerName%&quot; RowNumber=&quot;%RowsNumber%&quot; VariableName=&quot;%Report%&quot; x:Name=&quot;setCellValue1&quot; Description=&quot;Set a new value to a result set.&quot; DisplayName=&quot;Set Cell Value&quot; TypeName=&quot;SetCellValue&quot; /&gt;&lt;ns11:SetCellValue IsValid=&quot;True&quot; ColNumber=&quot;2&quot; NewValue=&quot;Off&quot; RowNumber=&quot;%RowsNumber%&quot; VariableName=&quot;%Report%&quot; x:Name=&quot;setCellValue2&quot; Description=&quot;Set a new value to a result set.&quot; DisplayName=&quot;Set Cell Value&quot; TypeName=&quot;SetCellValue&quot; /&gt;&lt;ns12:AddMemoryTableRow Selection=&quot;2&quot; IsValid=&quot;True&quot; x:Name=&quot;addMemoryTableRow1&quot; ResultSet=&quot;%Report%&quot; RowNumber=&quot;&quot; NumberOfRows=&quot;1&quot; ResultSetName=&quot;Report&quot; Description=&quot;Add a memory table row.&quot; DisplayName=&quot;Add Row to Memory Table&quot; TypeName=&quot;AddMemoryTableRow&quot; /&gt;&lt;/IfElseBranchActivity&gt;&lt;IfElseBranchActivity x:Name=&quot;ifElseBranchActivity2&quot;&gt;&lt;ns10:ReturnValue Value=&quot;Default Branch&quot; IsValid=&quot;True&quot; x:Name=&quot;returnValue2&quot; ConditionName=&quot;&quot; UseBranchWhenTimeout=&quot;True&quot; UseStoredValue=&quot;True&quot; ConditionType=&quot;&quot; DisplayName=&quot;Return Value&quot; Formula=&quot;{x:Null}&quot; Description=&quot;Use a returned value of a previous activity.&quot; ConditionNumber=&quot;0&quot; UseCustomeCondition=&quot;False&quot; Type=&quot;StoredValue&quot; TypeName=&quot;ReturnValue&quot; /&gt;&lt;ns13:Continue DisplayName=&quot;Continue&quot; x:Name=&quot;continue1&quot; Description=&quot;Continue the current workfow or branch&quot; IsValid=&quot;True&quot; TypeName=&quot;Continue&quot; /&gt;&lt;/IfElseBranchActivity&gt;&lt;/IfElseActivity&gt;&lt;/SequenceActivity&gt;&lt;/WhileActivity&gt;&lt;ns3:GetDate IsValid=&quot;True&quot; x:Name=&quot;getDate1&quot; TimeInterval=&quot;Seconds&quot; FuturePast=&quot;0&quot; DateFormat=&quot;MM_dd_yyyy_HH_mm&quot; TimeZoneName=&quot;(UTC+02:00) Jerusalem&quot; TimeZone=&quot;120&quot; Description=&quot;Returns the date in the specified format.&quot; DisplayName=&quot;Get Date&quot; TypeName=&quot;GetDate&quot; TimeToAdd=&quot;0&quot; /&gt;&lt;ns4:WriteXLS IsValid=&quot;True&quot; x:Name=&quot;writeXLS1&quot; HostName=&quot;localhost&quot; TimeInSeconds=&quot;0&quot; NewValue=&quot;%Report%&quot; Timeout=&quot;00:01:00&quot; DisplayName=&quot;Write Excel&quot; Path=&quot;c:\%getDate1%_PowerOff_Report.xls&quot; Password=&quot;&quot; Description=&quot;Write a result set as an Excel file&quot; HostId=&quot;1&quot; TypeName=&quot;WriteXLS&quot; UserName=&quot;&quot; /&gt;&lt;ns5:ConvertToHTMLTable DisplayName=&quot;Convert to HTML Table&quot; x:Name=&quot;convertToHTMLTable1&quot; TypeName=&quot;ConvertToHTMLTable&quot; Description=&quot;Convert a ResultSet to an HTML table.&quot; IsValid=&quot;True&quot; Value=&quot;%Report%&quot; /&gt;&lt;ns6:SendEmail Channel=&quot;0&quot; TimeInSeconds=&quot;0&quot; Subject=&quot;Power Off State Report&quot; DestinationNumber=&quot;1&quot; TemplateNumber=&quot;0&quot; ShiftLevel=&quot;&quot; IsValid=&quot;True&quot; HostId=&quot;-2&quot; TemplateName=&quot;&quot; TypeName=&quot;SendEmail&quot; SendRN=&quot;False&quot; x:Name=&quot;sendEmail1&quot; DestinationTypeCc=&quot;User&quot; DestinationType=&quot;User&quot; HostName=&quot;{x:Null}&quot; Timeout=&quot;00:00:00&quot; DisplayName=&quot;Send Email&quot; Attachments=&quot;c:\%getDate1%_PowerOff_Report.xls&quot; Cc=&quot;&quot; Description=&quot;Send an email to a user, a group or a duty.&quot; Continue=&quot;False&quot; DestinationNumberCc=&quot;0&quot; Body=&quot;&amp;lt;!DOCTYPE HTML PUBLIC &amp;quot;-//W3C//DTD HTML 4.0 Transitional//EN&amp;quot;&amp;gt;&amp;#xD;&amp;#xA;&amp;lt;HTML&amp;gt;&amp;lt;HEAD&amp;gt;&amp;#xD;&amp;#xA;&amp;lt;META content=&amp;quot;text/html; charset=unicode&amp;quot; http-equiv=Content-Type&amp;gt;&amp;#xD;&amp;#xA;&amp;lt;META name=GENERATOR content=&amp;quot;MSHTML 8.00.7601.17874&amp;quot;&amp;gt;&amp;lt;/HEAD&amp;gt;&amp;#xD;&amp;#xA;&amp;lt;BODY style=&amp;quot;BACKGROUND-COLOR: white&amp;quot;&amp;gt;&amp;#xD;&amp;#xA;&amp;lt;P&amp;gt;%convertToHTMLTable1%&amp;lt;/P&amp;gt;&amp;lt;/BODY&amp;gt;&amp;lt;/HTML&amp;gt;&amp;#xD;&amp;#xA;&quot; To=&quot;Admin&quot; ShiftLevelCc=&quot;&quot; MessageType=&quot;Custom&quot; /&gt;&lt;/SequentialWorkflowActivity&gt;" />
  <Tags>
    <Tag id="62" name="System">
    </Tag>
  </Tags>
</Workflow>