<?xml version="1.0" encoding="utf-8"?>
<Workflow>
  <WorkflowInfo Name="Switch to standby" Description="Switch to standby list of workstations and create a report" Details="&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.0 Transitional//EN&quot;&gt;&#xD;&#xA;&lt;HTML&gt;&lt;HEAD&gt;&#xD;&#xA;&lt;META content=&quot;text/html; charset=unicode&quot; http-equiv=Content-Type&gt;&#xD;&#xA;&lt;META name=GENERATOR content=&quot;MSHTML 9.00.8112.16434&quot;&gt;&lt;/HEAD&gt;&#xD;&#xA;&lt;BODY&gt;&lt;SPAN &#xD;&#xA;style=&quot;LINE-HEIGHT: 115%; FONT-FAMILY: 'Calibri','sans-serif'; FONT-SIZE: 11pt; mso-fareast-font-family: Calibri; mso-bidi-font-family: Arial; mso-ansi-language: EN-US; mso-fareast-language: EN-US; mso-bidi-language: HE&quot;&gt;This &#xD;&#xA;process retrieves a list of workstations from an Excel file or a memory table &#xD;&#xA;and checks if a screen saver process is running (to check if someone is working &#xD;&#xA;at the moment). In case there is a screensaver running, a switch to stand-by &#xD;&#xA;process is performed.&lt;/SPAN&gt;&lt;/BODY&gt;&lt;/HTML&gt;&#xD;&#xA;" XML="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&lt;SequentialWorkflowActivity x:Name=&quot;CustomWorkflow&quot; xmlns:ns0=&quot;clr-namespace:MemorySet;Assembly=MemorySet, Version=2.0.0.0, Culture=neutral, PublicKeyToken=null&quot; xmlns:ns1=&quot;clr-namespace:ReadXLS;Assembly=ReadXLS, Version=2.0.0.0, Culture=neutral, PublicKeyToken=null&quot; xmlns:ns2=&quot;clr-namespace:GetRowsCount;Assembly=GetRowsCount, Version=2.0.0.0, Culture=neutral, PublicKeyToken=null&quot; xmlns:ns3=&quot;clr-namespace:GetDate;Assembly=GetDate, Version=2.0.0.0, Culture=neutral, PublicKeyToken=null&quot; xmlns:ns4=&quot;clr-namespace:WriteFile;Assembly=WriteFile, Version=2.0.0.0, Culture=neutral, PublicKeyToken=null&quot; xmlns:ns5=&quot;clr-namespace:SendEmail;Assembly=SendEmail, Version=2.0.0.0, Culture=neutral, PublicKeyToken=null&quot; xmlns:ns6=&quot;clr-namespace:ExitWhile;Assembly=ExitWhile, Version=2.0.0.0, Culture=neutral, PublicKeyToken=null&quot; xmlns:ns7=&quot;clr-namespace:GetCellValue;Assembly=GetCellValue, Version=2.0.0.0, Culture=neutral, PublicKeyToken=null&quot; xmlns:ns8=&quot;clr-namespace:WMI;Assembly=WMI, Version=2.0.0.0, Culture=neutral, PublicKeyToken=null&quot; xmlns:ns9=&quot;clr-namespace:Contains;Assembly=Contains, Version=2.0.0.0, Culture=neutral, PublicKeyToken=null&quot; xmlns:ns10=&quot;clr-namespace:ReturnValue;Assembly=ReturnValue, Version=2.0.0.0, Culture=neutral, PublicKeyToken=null&quot; xmlns:ns11=&quot;clr-namespace:ServerStandby;Assembly=ServerStandby, Version=2.0.0.0, Culture=neutral, PublicKeyToken=null&quot; xmlns:ns12=&quot;clr-namespace:Continue;Assembly=Continue, Version=2.0.0.0, Culture=neutral, PublicKeyToken=null&quot; xmlns:x=&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot; xmlns=&quot;http://schemas.microsoft.com/winfx/2006/xaml/workflow&quot; x:Class=&quot;WorkflowDesignerControl.CustomWorkflow&quot;&gt;&lt;ns0:MemorySet IsValid=&quot;True&quot; VariableScope=&quot;Workflow&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; VariableValue=&quot; &quot; DisplayName=&quot;Set Memory&quot; IsAppend=&quot;False&quot; VariableName=&quot;STBY_Report&quot; x:Name=&quot;memorySet1&quot; Description=&quot;Set variable to specified memory scope.&quot; TypeName=&quot;MemorySet&quot; IsSaved=&quot;False&quot; /&gt;&lt;ns1:ReadXLS IsValid=&quot;True&quot; x:Name=&quot;readXLS1&quot; HostName=&quot;LocalHost&quot; TimeInSeconds=&quot;0&quot; Timeout=&quot;00:01:00&quot; DisplayName=&quot;Read Excel&quot; Path=&quot;c:\ServersList.xls&quot; Password=&quot;&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; Description=&quot;Read excel file&quot; HostId=&quot;1&quot; TypeName=&quot;ReadXLS&quot; UserName=&quot;&quot; /&gt;&lt;ns2:GetRowsCount IsValid=&quot;True&quot; x:Name=&quot;getRowsCount2&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; ResultSet=&quot;%readXLS1%&quot; DisplayName=&quot;Get Rows Count&quot; ResultSetName=&quot;readXLS1&quot; Description=&quot;Gets the amount of rows in a resultset.&quot; TypeName=&quot;GetRowsCount&quot; /&gt;&lt;WhileActivity x:Name=&quot;whileActivity1&quot; Condition=&quot;{x:Null}&quot;&gt;&lt;SequenceActivity x:Name=&quot;sequenceActivity1&quot;&gt;&lt;ns6:ExitWhile IsValid=&quot;True&quot; x:Name=&quot;exitWhile1&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; Counter=&quot;%getRowsCount2%&quot; Description=&quot;Exit current while activity&quot; DisplayName=&quot;Exit While&quot; TypeName=&quot;ExitWhile&quot; /&gt;&lt;ns7:GetCellValue ColumnType=&quot;Number&quot; IsValid=&quot;True&quot; x:Name=&quot;ServerName&quot; ColumnNumber=&quot;1&quot; ResultSet=&quot;%readXLS1%&quot; RowNumber=&quot;%exitWhile1%&quot; ResultSetName=&quot;readXLS1&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; Description=&quot;Gets a specific cell value from a resultset.&quot; DisplayName=&quot;Get Cell Value&quot; TypeName=&quot;GetCellValue&quot; /&gt;&lt;ns8:WMI IsValid=&quot;True&quot; x:Name=&quot;Check_Screen_Saver&quot; HostName=&quot;%ServerName%&quot; TimeInSeconds=&quot;0&quot; Timeout=&quot;00:01:00&quot; Query=&quot;select * from Win32_Process&quot; TypeName=&quot;WMI&quot; DisplayName=&quot;WMI Query&quot; Password=&quot;&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; Description=&quot;WMI Query&quot; HostId=&quot;-2&quot; WmiNamespace=&quot;root\CIMV2&quot; UserName=&quot;&quot; /&gt;&lt;ns9:Contains IsValid=&quot;True&quot; x:Name=&quot;contains1&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; TheValue=&quot;%Check_Screen_Saver%&quot; DisplayName=&quot;Contains&quot; Description=&quot;Returns true if sting contains search phrase.&quot; TheValue2=&quot;.scr&quot; TypeName=&quot;Contains&quot; /&gt;&lt;IfElseActivity x:Name=&quot;CheckScreenSaverStatus&quot;&gt;&lt;IfElseBranchActivity x:Name=&quot;Running&quot;&gt;&lt;ns10:ReturnValue Value=&quot;True&quot; IsValid=&quot;True&quot; x:Name=&quot;returnValue1&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; ConditionName=&quot;&quot; UseBranchWhenTimeout=&quot;False&quot; UseStoredValue=&quot;True&quot; ConditionType=&quot;&quot; DisplayName=&quot;Return Value&quot; Formula=&quot;=Equals(&amp;amp;&amp;amp;&amp;amp;,True)&quot; Description=&quot;Use a returned value of a previous activity.&quot; ConditionNumber=&quot;-1&quot; UseCustomeCondition=&quot;False&quot; Type=&quot;StoredValue&quot; TypeName=&quot;ReturnValue&quot; /&gt;&lt;ns11:ServerStandby IsValid=&quot;True&quot; x:Name=&quot;serverStandby1&quot; TimeInSeconds=&quot;0&quot; Timeout=&quot;00:01:00&quot; HostName=&quot;%ServerName%&quot; DisplayName=&quot;Server Standby&quot; Password=&quot;&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; Description=&quot;Puts the selected server in standby mode.&quot; HostId=&quot;-2&quot; TypeName=&quot;ServerStandby&quot; UserName=&quot;&quot; /&gt;&lt;ns0:MemorySet IsValid=&quot;True&quot; VariableScope=&quot;Workflow&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; VariableValue=&quot;%ServerName% has been switched to stby&quot; DisplayName=&quot;Set Memory&quot; IsAppend=&quot;True&quot; VariableName=&quot;STBY_Report&quot; x:Name=&quot;memorySet2&quot; Description=&quot;Set variable to specified memory scope.&quot; TypeName=&quot;MemorySet&quot; IsSaved=&quot;False&quot; /&gt;&lt;/IfElseBranchActivity&gt;&lt;IfElseBranchActivity x:Name=&quot;NotRunning&quot;&gt;&lt;ns10:ReturnValue Value=&quot;False&quot; IsValid=&quot;True&quot; x:Name=&quot;returnValue2&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; ConditionName=&quot;&quot; UseBranchWhenTimeout=&quot;True&quot; UseStoredValue=&quot;True&quot; ConditionType=&quot;&quot; DisplayName=&quot;Return Value&quot; Formula=&quot;=Equals(&amp;amp;&amp;amp;&amp;amp;,False)&quot; Description=&quot;Use a returned value of a previous activity.&quot; ConditionNumber=&quot;-1&quot; UseCustomeCondition=&quot;False&quot; Type=&quot;StoredValue&quot; TypeName=&quot;ReturnValue&quot; /&gt;&lt;ns12:Continue DisplayName=&quot;Continue&quot; x:Name=&quot;continue1&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; IsValid=&quot;True&quot; TypeName=&quot;Continue&quot; Description=&quot;Continue the current workfow or branch&quot; /&gt;&lt;/IfElseBranchActivity&gt;&lt;/IfElseActivity&gt;&lt;/SequenceActivity&gt;&lt;/WhileActivity&gt;&lt;ns3:GetDate IsValid=&quot;True&quot; x:Name=&quot;getDate1&quot; TimeInterval=&quot;Seconds&quot; FuturePast=&quot;0&quot; DateFormat=&quot;MM_dd_yyyy_HH_mm&quot; TypeName=&quot;GetDate&quot; DisplayName=&quot;Get Date&quot; TimeZone=&quot;120&quot; TimeZoneIDS=&quot;Israel Standard Time&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; Description=&quot;Returns the date in the specified format.&quot; TimeZoneName=&quot;(UTC+02:00) Jerusalem&quot; TimeZoneIsInDaylightSavingTime=&quot;False&quot; TimeToAdd=&quot;0&quot; /&gt;&lt;ns4:WriteFile IsValid=&quot;True&quot; x:Name=&quot;writeFile1&quot; HostName=&quot;LocalHost&quot; TimeInSeconds=&quot;0&quot; NewValue=&quot;%STBY_Report%&quot; Timeout=&quot;00:01:00&quot; DisplayName=&quot;Write File&quot; Path=&quot;c:\STBY_Report_%getDate1%.txt&quot; IsAppend=&quot;False&quot; Password=&quot;&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; Description=&quot;Write text to a file&quot; HostId=&quot;1&quot; TypeName=&quot;WriteFile&quot; UserName=&quot;&quot; /&gt;&lt;ns5:SendEmail Channel=&quot;0&quot; TimeInSeconds=&quot;0&quot; Subject=&quot;Workstations StandBy Report&quot; DestinationNumber=&quot;1&quot; x:Name=&quot;sendEmail1&quot; TemplateNumber=&quot;0&quot; ShiftLevel=&quot;&quot; IsValid=&quot;True&quot; HostId=&quot;-2&quot; TemplateName=&quot;&quot; TypeName=&quot;SendEmail&quot; SendRN=&quot;False&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; DestinationTypeCc=&quot;User&quot; DestinationType=&quot;User&quot; HostName=&quot;{x:Null}&quot; Timeout=&quot;00:00:00&quot; DisplayName=&quot;Send Email&quot; Attachments=&quot;c:\STBY_Report_%getDate1%.txt&quot; Cc=&quot;&quot; Description=&quot;Send an email to a user, a group or a duty.&quot; Continue=&quot;False&quot; DestinationNumberCc=&quot;0&quot; Body=&quot;&amp;lt;!DOCTYPE HTML PUBLIC &amp;quot;-//W3C//DTD HTML 4.0 Transitional//EN&amp;quot;&amp;gt;&amp;#xD;&amp;#xA;&amp;lt;HTML&amp;gt;&amp;lt;HEAD&amp;gt;&amp;#xD;&amp;#xA;&amp;lt;META content=&amp;quot;text/html; charset=utf-8&amp;quot; http-equiv=Content-Type&amp;gt;&amp;#xD;&amp;#xA;&amp;lt;META name=GENERATOR content=&amp;quot;MSHTML 11.00.9600.16476&amp;quot;&amp;gt;&amp;lt;/HEAD&amp;gt;&amp;#xD;&amp;#xA;&amp;lt;BODY style=&amp;quot;BACKGROUND-COLOR: white&amp;quot;&amp;gt;%STBY_Report% &amp;lt;/BODY&amp;gt;&amp;lt;/HTML&amp;gt;&amp;#xD;&amp;#xA;&quot; To=&quot;Admin&quot; ShiftLevelCc=&quot;&quot; MessageType=&quot;Custom&quot; /&gt;&lt;/SequentialWorkflowActivity&gt;" />
  <Tags>
    <Tag id="62" name="System">
    </Tag>
  </Tags>
</Workflow>