<?xml version="1.0" encoding="utf-8"?>
<Workflow>
  <WorkflowInfo Name="Servers log off procedure" Description="Log off from a list of servers" Details="&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.0 Transitional//EN&quot;&gt;&#xD;&#xA;&lt;HTML&gt;&lt;HEAD&gt;&#xD;&#xA;&lt;META content=&quot;text/html; charset=unicode&quot; http-equiv=Content-Type&gt;&#xD;&#xA;&lt;META name=GENERATOR content=&quot;MSHTML 9.00.8112.16434&quot;&gt;&lt;/HEAD&gt;&#xD;&#xA;&lt;BODY&gt;&lt;SPAN &#xD;&#xA;style=&quot;LINE-HEIGHT: 115%; FONT-FAMILY: 'Calibri','sans-serif'; FONT-SIZE: 11pt; mso-fareast-font-family: Calibri; mso-bidi-font-family: Arial; mso-ansi-language: EN-US; mso-fareast-language: EN-US; mso-bidi-language: HE&quot;&gt;This &#xD;&#xA;process retrieves a list of servers from an Excel file or a memory table and &#xD;&#xA;checks if the server is up or down. In case the server is up a log off process &#xD;&#xA;is performed, and at the end of the process a report is sent to Admin. Use this &#xD;&#xA;process to protect your company’s computers and network from being abused by &#xD;&#xA;unauthorized personnel.&lt;/SPAN&gt;&lt;/BODY&gt;&lt;/HTML&gt;&#xD;&#xA;" XML="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&lt;SequentialWorkflowActivity x:Name=&quot;CustomWorkflow&quot; xmlns:ns0=&quot;clr-namespace:MemorySet;Assembly=MemorySet, Version=2.0.0.0, Culture=neutral, PublicKeyToken=null&quot; xmlns:ns1=&quot;clr-namespace:ReadXLS;Assembly=ReadXLS, Version=2.0.0.0, Culture=neutral, PublicKeyToken=null&quot; xmlns:ns2=&quot;clr-namespace:GetRowsCount;Assembly=GetRowsCount, Version=2.0.0.0, Culture=neutral, PublicKeyToken=null&quot; xmlns:ns3=&quot;clr-namespace:SendEmail;Assembly=SendEmail, Version=2.0.0.0, Culture=neutral, PublicKeyToken=null&quot; xmlns:ns4=&quot;clr-namespace:ExitWhile;Assembly=ExitWhile, Version=2.0.0.0, Culture=neutral, PublicKeyToken=null&quot; xmlns:ns5=&quot;clr-namespace:GetCellValue;Assembly=GetCellValue, Version=2.0.0.0, Culture=neutral, PublicKeyToken=null&quot; xmlns:ns6=&quot;clr-namespace:Ping;Assembly=Ping, Version=2.0.0.0, Culture=neutral, PublicKeyToken=null&quot; xmlns:ns7=&quot;clr-namespace:ReturnValue;Assembly=ReturnValue, Version=2.0.0.0, Culture=neutral, PublicKeyToken=null&quot; xmlns:ns8=&quot;clr-namespace:ServerLogoff;Assembly=ServerLogoff, Version=2.0.0.0, Culture=neutral, PublicKeyToken=null&quot; xmlns:ns9=&quot;clr-namespace:Continue;Assembly=Continue, Version=2.0.0.0, Culture=neutral, PublicKeyToken=null&quot; xmlns:x=&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot; xmlns=&quot;http://schemas.microsoft.com/winfx/2006/xaml/workflow&quot; x:Class=&quot;WorkflowDesignerControl.CustomWorkflow&quot;&gt;&lt;ns0:MemorySet IsValid=&quot;True&quot; VariableScope=&quot;Workflow&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; VariableValue=&quot;Servers that were logged off:&amp;#xD;&amp;#xA;-----------------------------------------------&amp;#xD;&amp;#xA;&quot; DisplayName=&quot;Set Memory&quot; IsAppend=&quot;False&quot; VariableName=&quot;ServersLogoffReport&quot; x:Name=&quot;memorySet1&quot; Description=&quot;Set variable to specified memory scope.&quot; TypeName=&quot;MemorySet&quot; IsSaved=&quot;False&quot; /&gt;&lt;ns1:ReadXLS IsValid=&quot;True&quot; x:Name=&quot;readXLS1&quot; HostName=&quot;LocalHost&quot; TimeInSeconds=&quot;0&quot; Timeout=&quot;00:01:00&quot; DisplayName=&quot;Read Excel&quot; Path=&quot;c:\ServersList.xls&quot; Password=&quot;&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; Description=&quot;Read excel file&quot; HostId=&quot;1&quot; TypeName=&quot;ReadXLS&quot; UserName=&quot;&quot; /&gt;&lt;ns2:GetRowsCount IsValid=&quot;True&quot; x:Name=&quot;getRowsCount1&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; ResultSet=&quot;%readXLS1%&quot; DisplayName=&quot;Get Rows Count&quot; ResultSetName=&quot;readXLS1&quot; Description=&quot;Gets the amount of rows in a resultset.&quot; TypeName=&quot;GetRowsCount&quot; /&gt;&lt;WhileActivity x:Name=&quot;whileActivity2&quot; Condition=&quot;{x:Null}&quot;&gt;&lt;SequenceActivity x:Name=&quot;sequenceActivity2&quot;&gt;&lt;ns4:ExitWhile IsValid=&quot;True&quot; x:Name=&quot;exitWhile1&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; Counter=&quot;%getRowsCount1%&quot; Description=&quot;Exit current while activity&quot; DisplayName=&quot;Exit While&quot; TypeName=&quot;ExitWhile&quot; /&gt;&lt;ns5:GetCellValue ColumnType=&quot;Number&quot; IsValid=&quot;True&quot; x:Name=&quot;ServerName&quot; ColumnNumber=&quot;1&quot; ResultSet=&quot;%ReadXLS1%&quot; RowNumber=&quot;%exitWhile1%&quot; ResultSetName=&quot;ReadXLS1&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; Description=&quot;Gets a specific cell value from a resultset.&quot; DisplayName=&quot;Get Cell Value&quot; TypeName=&quot;GetCellValue&quot; /&gt;&lt;ns6:Ping IsValid=&quot;True&quot; x:Name=&quot;ping1&quot; TimeInSeconds=&quot;60&quot; Timeout=&quot;00:01:00&quot; HostName=&quot;%ServerName%&quot; DisplayName=&quot;Ping&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; Description=&quot;Run     a Ping command line&quot; HostId=&quot;-2&quot; TypeName=&quot;Ping&quot; /&gt;&lt;IfElseActivity x:Name=&quot;CHECK_SERVER_STATUS&quot;&gt;&lt;IfElseBranchActivity x:Name=&quot;SERVER_UP&quot;&gt;&lt;ns7:ReturnValue Value=&quot;Success&quot; IsValid=&quot;True&quot; x:Name=&quot;returnValue1&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; ConditionName=&quot;&quot; UseBranchWhenTimeout=&quot;False&quot; UseStoredValue=&quot;True&quot; ConditionType=&quot;&quot; DisplayName=&quot;Return Value&quot; Formula=&quot;=Equals(&amp;amp;&amp;amp;&amp;amp;,Success)&quot; Description=&quot;Use a returned value of a previous activity.&quot; ConditionNumber=&quot;-1&quot; UseCustomeCondition=&quot;False&quot; Type=&quot;StoredValue&quot; TypeName=&quot;ReturnValue&quot; /&gt;&lt;ns8:ServerLogoff IsValid=&quot;True&quot; x:Name=&quot;serverLogoff1&quot; HostName=&quot;%ServerName%&quot; TimeInSeconds=&quot;0&quot; Timeout=&quot;00:01:00&quot; ActionTypeList=&quot;Forced,Normal&quot; ActionType=&quot;Forced&quot; DisplayName=&quot;Server Logoff&quot; Password=&quot;&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; Description=&quot;Log off     the selected server&quot; HostId=&quot;-2&quot; TypeName=&quot;ServerLogoff&quot; UserName=&quot;&quot; /&gt;&lt;ns0:MemorySet IsValid=&quot;True&quot; VariableScope=&quot;Workflow&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; VariableValue=&quot;%ServerName%&quot; DisplayName=&quot;Set Memory&quot; IsAppend=&quot;True&quot; VariableName=&quot;ServersLogoffReport&quot; x:Name=&quot;memorySet2&quot; Description=&quot;Set variable to specified memory scope.&quot; TypeName=&quot;MemorySet&quot; IsSaved=&quot;False&quot; /&gt;&lt;/IfElseBranchActivity&gt;&lt;IfElseBranchActivity x:Name=&quot;SERVER_DOWN&quot;&gt;&lt;ns7:ReturnValue Value=&quot;Failure&quot; IsValid=&quot;True&quot; x:Name=&quot;returnValue2&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; ConditionName=&quot;&quot; UseBranchWhenTimeout=&quot;True&quot; UseStoredValue=&quot;True&quot; ConditionType=&quot;&quot; DisplayName=&quot;Return Value&quot; Formula=&quot;=Equals(&amp;amp;&amp;amp;&amp;amp;,Failure)&quot; Description=&quot;Use a returned value of a previous activity.&quot; ConditionNumber=&quot;-1&quot; UseCustomeCondition=&quot;False&quot; Type=&quot;StoredValue&quot; TypeName=&quot;ReturnValue&quot; /&gt;&lt;ns9:Continue DisplayName=&quot;Continue&quot; x:Name=&quot;continue1&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; IsValid=&quot;True&quot; TypeName=&quot;Continue&quot; Description=&quot;Continue the current workfow or branch&quot; /&gt;&lt;/IfElseBranchActivity&gt;&lt;/IfElseActivity&gt;&lt;/SequenceActivity&gt;&lt;/WhileActivity&gt;&lt;ns3:SendEmail Channel=&quot;0&quot; TimeInSeconds=&quot;0&quot; Subject=&quot;Servers Logoff Report&quot; DestinationNumber=&quot;1&quot; x:Name=&quot;sendEmail1&quot; TemplateNumber=&quot;0&quot; ShiftLevel=&quot;&quot; IsValid=&quot;True&quot; HostId=&quot;-2&quot; TemplateName=&quot;&quot; TypeName=&quot;SendEmail&quot; SendRN=&quot;False&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; DestinationTypeCc=&quot;User&quot; DestinationType=&quot;User&quot; HostName=&quot;{x:Null}&quot; Timeout=&quot;00:00:00&quot; DisplayName=&quot;Send Email&quot; Attachments=&quot;&quot; Cc=&quot;&quot; Description=&quot;Send an email to a user, a     group or a duty.&quot; Continue=&quot;False&quot; DestinationNumberCc=&quot;0&quot; Body=&quot;&amp;lt;!DOCTYPE HTML PUBLIC &amp;quot;-//W3C//DTD HTML 4.0 Transitional//EN&amp;quot;&amp;gt;&amp;#xD;&amp;#xA;&amp;lt;HTML&amp;gt;&amp;lt;HEAD&amp;gt;&amp;#xD;&amp;#xA;&amp;lt;META content=&amp;quot;text/html; charset=windows-1252&amp;quot; http-equiv=Content-Type&amp;gt;&amp;#xD;&amp;#xA;&amp;lt;META name=GENERATOR content=&amp;quot;MSHTML 11.00.9600.16476&amp;quot;&amp;gt;&amp;lt;/HEAD&amp;gt;&amp;#xD;&amp;#xA;&amp;lt;BODY&amp;gt;&amp;lt;PRE&amp;gt;&amp;lt;PRE&amp;gt;%ServersLogoffReport%&amp;lt;/PRE&amp;gt;&amp;lt;/PRE&amp;gt;&amp;lt;/BODY&amp;gt;&amp;lt;/HTML&amp;gt;&amp;#xD;&amp;#xA;&quot; To=&quot;Admin&quot; ShiftLevelCc=&quot;&quot; MessageType=&quot;Custom&quot; /&gt;&lt;/SequentialWorkflowActivity&gt;" />
  <Tags>
    <Tag id="45" name="Monitoring">
    </Tag>
    <Tag id="54" name="Report">
    </Tag>
    <Tag id="62" name="System">
    </Tag>
  </Tags>
</Workflow>