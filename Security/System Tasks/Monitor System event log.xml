<?xml version="1.0" encoding="utf-8"?>
<Workflow>
  <WorkflowInfo Name="Monitor System event log" Description="Monitor system event log and send the error report" Details="&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.0 Transitional//EN&quot;&gt;&#xD;&#xA;&lt;HTML&gt;&lt;HEAD&gt;&#xD;&#xA;&lt;META content=&quot;text/html; charset=unicode&quot; http-equiv=Content-Type&gt;&#xD;&#xA;&lt;META name=GENERATOR content=&quot;MSHTML 9.00.8112.16434&quot;&gt;&lt;/HEAD&gt;&#xD;&#xA;&lt;BODY&gt;&lt;SPAN &#xD;&#xA;style=&quot;LINE-HEIGHT: 115%; FONT-FAMILY: 'Calibri','sans-serif'; FONT-SIZE: 11pt; mso-fareast-font-family: Calibri; mso-bidi-font-family: Arial; mso-ansi-language: EN-US; mso-fareast-language: EN-US; mso-bidi-language: HE&quot;&gt;This &#xD;&#xA;process monitors the System event log, and searches for the phrase Error. Run &#xD;&#xA;this process on an hourly basis to keep track of your system &#xD;&#xA;problems.&lt;/SPAN&gt;&lt;/BODY&gt;&lt;/HTML&gt;&#xD;&#xA;" XML="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&lt;SequentialWorkflowActivity x:Name=&quot;CustomWorkflow&quot; xmlns:ns0=&quot;clr-namespace:ReadXLS;Assembly=ReadXLS, Version=2.0.0.0, Culture=neutral, PublicKeyToken=null&quot; xmlns:ns1=&quot;clr-namespace:GetRowsCount;Assembly=GetRowsCount, Version=2.0.0.0, Culture=neutral, PublicKeyToken=null&quot; xmlns:ns2=&quot;clr-namespace:ExitWhile;Assembly=ExitWhile, Version=2.0.0.0, Culture=neutral, PublicKeyToken=null&quot; xmlns:ns3=&quot;clr-namespace:GetCellValue;Assembly=GetCellValue, Version=2.0.0.0, Culture=neutral, PublicKeyToken=null&quot; xmlns:ns4=&quot;clr-namespace:GetWindowEventLogs;Assembly=GetWindowEventLogs, Version=2.0.0.0, Culture=neutral, PublicKeyToken=null&quot; xmlns:ns5=&quot;clr-namespace:ReturnValue;Assembly=ReturnValue, Version=2.0.0.0, Culture=neutral, PublicKeyToken=null&quot; xmlns:ns6=&quot;clr-namespace:ConvertToHTMLTable;Assembly=ConvertToHTMLTable, Version=2.0.0.0, Culture=neutral, PublicKeyToken=null&quot; xmlns:ns7=&quot;clr-namespace:SendEmail;Assembly=SendEmail, Version=2.0.0.0, Culture=neutral, PublicKeyToken=null&quot; xmlns:ns8=&quot;clr-namespace:Continue;Assembly=Continue, Version=2.0.0.0, Culture=neutral, PublicKeyToken=null&quot; xmlns:x=&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot; xmlns=&quot;http://schemas.microsoft.com/winfx/2006/xaml/workflow&quot; x:Class=&quot;WorkflowDesignerControl.CustomWorkflow&quot;&gt;&lt;ns0:ReadXLS IsValid=&quot;True&quot; x:Name=&quot;readXLS1&quot; HostName=&quot;LocalHost&quot; TimeInSeconds=&quot;0&quot; Timeout=&quot;00:01:00&quot; DisplayName=&quot;Read Excel&quot; Path=&quot;c:\ServersList.xls&quot; Password=&quot;&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; Description=&quot;Read excel file&quot; HostId=&quot;1&quot; TypeName=&quot;ReadXLS&quot; UserName=&quot;&quot; /&gt;&lt;ns1:GetRowsCount IsValid=&quot;True&quot; x:Name=&quot;getRowsCount1&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; ResultSet=&quot;%readXLS1%&quot; DisplayName=&quot;Get Rows Count&quot; ResultSetName=&quot;readXLS1&quot; Description=&quot;Gets the amount of rows in a resultset.&quot; TypeName=&quot;GetRowsCount&quot; /&gt;&lt;WhileActivity x:Name=&quot;whileActivity2&quot; Condition=&quot;{x:Null}&quot;&gt;&lt;SequenceActivity x:Name=&quot;sequenceActivity2&quot;&gt;&lt;ns2:ExitWhile IsValid=&quot;True&quot; x:Name=&quot;exitWhile1&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; Counter=&quot;%getRowsCount1%&quot; Description=&quot;Exit current while activity&quot; DisplayName=&quot;Exit While&quot; TypeName=&quot;ExitWhile&quot; /&gt;&lt;ns3:GetCellValue ColumnType=&quot;Number&quot; IsValid=&quot;True&quot; x:Name=&quot;ServerName&quot; ColumnNumber=&quot;1&quot; ResultSet=&quot;%readXLS1%&quot; RowNumber=&quot;%exitWhile1%&quot; ResultSetName=&quot;readXLS1&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; Description=&quot;Gets a specific cell value from a resultset.&quot; DisplayName=&quot;Get Cell Value&quot; TypeName=&quot;GetCellValue&quot; /&gt;&lt;ns4:GetWindowEventLogs Password=&quot;&quot; Description=&quot;Get the logs of the windows according     to the event type.&quot; TimeInSeconds=&quot;0&quot; FilterComputer=&quot;&quot; HostName=&quot;%ServerName%&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; DisplayName=&quot;Get Windows Event Logs&quot; IsValid=&quot;True&quot; HostId=&quot;-2&quot; FilterSource=&quot;&quot; FilterDescription=&quot;&quot; FilterEventCode=&quot;&quot; FilterUser=&quot;&quot; MaxAge=&quot;01:00:00&quot; x:Name=&quot;getWindowEventLogs3&quot; Timeout=&quot;00:01:00&quot; FilterType=&quot;Error&quot; UserName=&quot;&quot; EventType=&quot;System&quot; FilterCategory=&quot;&quot; TypeName=&quot;GetWindowEventLogs&quot; /&gt;&lt;ns1:GetRowsCount IsValid=&quot;True&quot; x:Name=&quot;getRowsCount3&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; ResultSet=&quot;%getWindowEventLogs3%&quot; DisplayName=&quot;Get Rows Count&quot; ResultSetName=&quot;getWindowEventLogs3&quot; Description=&quot;Gets the     amount of rows in a resultset.&quot; TypeName=&quot;GetRowsCount&quot; /&gt;&lt;IfElseActivity x:Name=&quot;SYSTEM&quot;&gt;&lt;IfElseBranchActivity x:Name=&quot;ifElseBranchActivity5&quot;&gt;&lt;ns5:ReturnValue Value=&quot;0&quot; IsValid=&quot;True&quot; x:Name=&quot;returnValue5&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; ConditionName=&quot;&quot; UseBranchWhenTimeout=&quot;True&quot; UseStoredValue=&quot;False&quot; ConditionType=&quot;Not Equals&quot; DisplayName=&quot;Return Value&quot; Formula=&quot;=Not     Equals(&amp;quot;&amp;amp;&amp;amp;&amp;amp;&amp;quot;,&amp;quot;0&amp;quot;)&quot; Description=&quot;Use a returned value of a previous activity.&quot; ConditionNumber=&quot;-1&quot; UseCustomeCondition=&quot;False&quot; Type=&quot;UserDefinedValue&quot; TypeName=&quot;ReturnValue&quot; /&gt;&lt;ns6:ConvertToHTMLTable Value=&quot;%getWindowEventLogs3%&quot; IsValid=&quot;True&quot; x:Name=&quot;convertToHTMLTable3&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; Description=&quot;Convert a ResultSet     to an HTML table.&quot; DisplayName=&quot;Convert to HTML     Table&quot; TypeName=&quot;ConvertToHTMLTable&quot; /&gt;&lt;ns7:SendEmail Channel=&quot;0&quot; TimeInSeconds=&quot;0&quot; Subject=&quot;System Errors on %ServerName%&quot; DestinationNumber=&quot;1&quot; x:Name=&quot;sendEmail3&quot; TemplateNumber=&quot;0&quot; ShiftLevel=&quot;&quot; IsValid=&quot;True&quot; HostId=&quot;-2&quot; TemplateName=&quot;&quot; TypeName=&quot;SendEmail&quot; SendRN=&quot;False&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; DestinationTypeCc=&quot;User&quot; DestinationType=&quot;User&quot; HostName=&quot;{x:Null}&quot; Timeout=&quot;00:00:00&quot; DisplayName=&quot;Send Email&quot; Attachments=&quot;&quot; Cc=&quot;&quot; Description=&quot;Send an email to a user, a     group or a duty.&quot; Continue=&quot;False&quot; DestinationNumberCc=&quot;0&quot; Body=&quot;&amp;lt;!DOCTYPE HTML PUBLIC &amp;quot;-//W3C//DTD HTML 4.0 Transitional//EN&amp;quot;&amp;gt;&amp;#xD;&amp;#xA;&amp;lt;HTML&amp;gt;&amp;lt;HEAD&amp;gt;&amp;#xD;&amp;#xA;&amp;lt;META content=&amp;quot;text/html; charset=windows-1252&amp;quot; http-equiv=Content-Type&amp;gt;&amp;#xD;&amp;#xA;&amp;lt;META name=GENERATOR content=&amp;quot;MSHTML 9.00.8112.16434&amp;quot;&amp;gt;&amp;lt;/HEAD&amp;gt;&amp;#xD;&amp;#xA;&amp;lt;BODY&amp;gt;&amp;lt;PRE&amp;gt;&amp;lt;PRE&amp;gt;%convertToHTMLTable3%&amp;lt;/PRE&amp;gt;&amp;lt;/PRE&amp;gt;&amp;lt;/BODY&amp;gt;&amp;lt;/HTML&amp;gt;&amp;#xD;&amp;#xA;&quot; To=&quot;Admin&quot; ShiftLevelCc=&quot;&quot; MessageType=&quot;Custom&quot; /&gt;&lt;/IfElseBranchActivity&gt;&lt;IfElseBranchActivity x:Name=&quot;ifElseBranchActivity6&quot;&gt;&lt;ns5:ReturnValue Value=&quot;0&quot; IsValid=&quot;True&quot; x:Name=&quot;returnValue6&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; ConditionName=&quot;&quot; UseBranchWhenTimeout=&quot;False&quot; UseStoredValue=&quot;False&quot; ConditionType=&quot;Equals&quot; DisplayName=&quot;Return Value&quot; Formula=&quot;=Equals(&amp;quot;&amp;amp;&amp;amp;&amp;amp;&amp;quot;,&amp;quot;0&amp;quot;)&quot; Description=&quot;Use a returned value of a previous activity.&quot; ConditionNumber=&quot;-1&quot; UseCustomeCondition=&quot;False&quot; Type=&quot;UserDefinedValue&quot; TypeName=&quot;ReturnValue&quot; /&gt;&lt;ns8:Continue DisplayName=&quot;Continue&quot; x:Name=&quot;continue3&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; IsValid=&quot;True&quot; TypeName=&quot;Continue&quot; Description=&quot;Continue the current workfow or branch&quot; /&gt;&lt;/IfElseBranchActivity&gt;&lt;/IfElseActivity&gt;&lt;/SequenceActivity&gt;&lt;/WhileActivity&gt;&lt;/SequentialWorkflowActivity&gt;" />
  <Tags>
    <Tag id="45" name="Monitoring">
    </Tag>
    <Tag id="62" name="System">
    </Tag>
  </Tags>
</Workflow>