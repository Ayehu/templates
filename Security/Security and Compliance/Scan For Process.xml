<?xml version="1.0" encoding="utf-8"?>
<Workflow>
  <WorkflowInfo Name="Scan For Process" Description="Scan multiple computers for a specific process" Details="&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.0 Transitional//EN&quot;&gt;&#xD;&#xA;&lt;HTML&gt;&lt;HEAD&gt;&#xD;&#xA;&lt;META content=&quot;text/html; charset=utf-8&quot; http-equiv=Content-Type&gt;&#xD;&#xA;&lt;META name=GENERATOR content=&quot;MSHTML 11.00.9600.16384&quot;&gt;&lt;/HEAD&gt;&#xD;&#xA;&lt;BODY&gt;&#xD;&#xA;&lt;P&gt;&lt;FONT face=Calibri&gt;&lt;STRONG&gt;Information&lt;/STRONG&gt;&lt;BR&gt;This workflow searches for &#xD;&#xA;a process running on a list of servers, and returns the list of servers where &#xD;&#xA;the process is running. This workflow&amp;nbsp;should be set in a Run Workflow &#xD;&#xA;activity of a parent workflow (act as a child &#xD;&#xA;workflow).&lt;BR&gt;&lt;BR&gt;&lt;STRONG&gt;Requirements: &lt;/STRONG&gt;&lt;BR&gt;* Workflow named &lt;EM&gt;Name &#xD;&#xA;To IPAddress&lt;/EM&gt; should exist and be verified.&lt;BR&gt;&lt;/FONT&gt;&lt;FONT face=Calibri&gt;* &#xD;&#xA;All end servers listed in the input variable ComputerToScan should be &#xD;&#xA;accessible. &lt;BR&gt;&lt;BR&gt;&lt;STRONG&gt;Input Variables&lt;/STRONG&gt;&amp;nbsp;(variables recieved &#xD;&#xA;from the parent workflow): &lt;BR&gt;* &lt;EM&gt;ComputersToScan&lt;/EM&gt; - a table&amp;nbsp;that &#xD;&#xA;consists&amp;nbsp;a list of&amp;nbsp;servers - Name or IP. &lt;BR&gt;* &lt;EM&gt;ProcessName&lt;/EM&gt; - &#xD;&#xA;the name of the process that the workflow is searching. &#xD;&#xA;&lt;BR&gt;&lt;BR&gt;&lt;STRONG&gt;Output&lt;/STRONG&gt; (variable that will&amp;nbsp;be read in the parent &#xD;&#xA;workflow): &lt;BR&gt;* &lt;EM&gt;ServerList&lt;/EM&gt; - a list of all the servers in which the &#xD;&#xA;process is running.&lt;/FONT&gt;&lt;BR&gt;&lt;/P&gt;&lt;/BODY&gt;&lt;/HTML&gt;&#xD;&#xA;" XML="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&lt;SequentialWorkflowActivity x:Name=&quot;CustomWorkflow&quot; xmlns:ns0=&quot;clr-namespace:GetRowsCount;Assembly=GetRowsCount, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null&quot; xmlns:ns1=&quot;clr-namespace:DisplayValue;Assembly=DisplayValue, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null&quot; xmlns:ns2=&quot;clr-namespace:ExitWhile;Assembly=ExitWhile, Version=4.6.1.0, Culture=neutral, PublicKeyToken=null&quot; xmlns:ns3=&quot;clr-namespace:GetCellValue;Assembly=GetCellValue, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null&quot; xmlns:ns4=&quot;clr-namespace:RunWorkflow;Assembly=RunWorkflow, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null&quot; xmlns:ns5=&quot;clr-namespace:ProcessList;Assembly=ProcessList, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null&quot; xmlns:ns6=&quot;clr-namespace:ResultSetFilter;Assembly=ResultSetFilter, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null&quot; xmlns:ns7=&quot;clr-namespace:ReturnValue;Assembly=ReturnValue, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null&quot; xmlns:ns8=&quot;clr-namespace:MemorySet;Assembly=MemorySet, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null&quot; xmlns:x=&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot; xmlns=&quot;http://schemas.microsoft.com/winfx/2006/xaml/workflow&quot; x:Class=&quot;WorkflowDesignerControl.CustomWorkflow&quot;&gt;&lt;ns0:GetRowsCount x:Name=&quot;NumOfComputers&quot; IsValid=&quot;True&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; Description=&quot;Gets the amount of rows in a resultset.&quot; TypeName=&quot;GetRowsCount&quot; ResultSetName=&quot;Parent.ComputersToScan&quot; ResultSet=&quot;%Parent.ComputersToScan%&quot; DisplayName=&quot;Get Rows Count&quot; /&gt;&lt;WhileActivity x:Name=&quot;whileActivity1&quot; Condition=&quot;{x:Null}&quot;&gt;&lt;SequenceActivity x:Name=&quot;sequenceActivity1&quot;&gt;&lt;ns2:ExitWhile x:Name=&quot;exitWhile1&quot; IsValid=&quot;True&quot; Counter=&quot;%NumOfComputers%&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; Description=&quot;Exit current while activity&quot; TypeName=&quot;ExitWhile&quot; DisplayName=&quot;Exit While&quot; /&gt;&lt;ns3:GetCellValue x:Name=&quot;Name&quot; IsValid=&quot;True&quot; RowNumber=&quot;%exitWhile1%&quot; ColumnType=&quot;Number&quot; ColumnNumber=&quot;1&quot; Description=&quot;Gets a specific cell value from a resultset.&quot; TypeName=&quot;GetCellValue&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; ResultSetName=&quot;Parent.ComputersToScan&quot; ResultSet=&quot;%Parent.ComputersToScan%&quot; DisplayName=&quot;Get Cell Value&quot; /&gt;&lt;ns4:RunWorkflow x:Name=&quot;runWorkflow1&quot; WorkflowName=&quot;Name To IPAddress&quot; IsValid=&quot;True&quot; WorkflowID=&quot;0&quot; RunInBackground=&quot;False&quot; Description=&quot;Run an existing workflow&quot; TypeName=&quot;RunWorkflow&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; DisplayName=&quot;Run Workflow&quot; /&gt;&lt;ns5:ProcessList x:Name=&quot;processList1&quot; Password=&quot;724261384466624B6B33424F776B684C7A6A667934513D3D&quot; HostId=&quot;-2&quot; IsValid=&quot;True&quot; HostName=&quot;%runWorkflow1.IPAddress%&quot; Timeout=&quot;00:01:00&quot; UserName=&quot;localhost\administrator&quot; DisplayName=&quot;Process List&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; Description=&quot;Get the list of processes on the specified host&quot; TypeName=&quot;ProcessList&quot; TimeInSeconds=&quot;0&quot; /&gt;&lt;ns6:ResultSetFilter x:Name=&quot;resultSetFilter1&quot; TypeName=&quot;ResultSetFilter&quot; IsValid=&quot;True&quot; Timeout=&quot;00:01:00&quot; FilterStatement=&quot;Name = '%Parent.ProcessName%'&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; Description=&quot;Filter a Result Set&quot; VariableName=&quot;%processList1%&quot; DisplayName=&quot;ResultSet Filter&quot; /&gt;&lt;ns0:GetRowsCount x:Name=&quot;getRowsCount1&quot; IsValid=&quot;True&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; Description=&quot;Gets the amount of rows in a resultset.&quot; TypeName=&quot;GetRowsCount&quot; ResultSetName=&quot;resultSetFilter1&quot; ResultSet=&quot;%resultSetFilter1%&quot; DisplayName=&quot;Get Rows Count&quot; /&gt;&lt;IfElseActivity x:Name=&quot;ifElseActivity1&quot;&gt;&lt;IfElseBranchActivity x:Name=&quot;ifElseBranchActivity1&quot;&gt;&lt;ns7:ReturnValue Formula=&quot;=&amp;amp;&amp;amp;&amp;amp; &amp;gt; 0&quot; UseStoredValue=&quot;False&quot; ConditionNumber=&quot;-1&quot; IsValid=&quot;True&quot; Value=&quot;0&quot; ConditionType=&quot;&amp;gt;&quot; Description=&quot;Use a returned value of a previous activity.&quot; Type=&quot;UserDefinedValue&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; ConditionName=&quot;&quot; TypeName=&quot;ReturnValue&quot; UseCustomeCondition=&quot;False&quot; x:Name=&quot;returnValue1&quot; UseBranchWhenTimeout=&quot;False&quot; DisplayName=&quot;Return Value&quot; /&gt;&lt;ns8:MemorySet x:Name=&quot;memorySet1&quot; IsSaved=&quot;False&quot; IsValid=&quot;True&quot; VariableScope=&quot;Workflow&quot; VariableValue=&quot;%Name%&quot; VariableName=&quot;ServerList&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; Description=&quot;Set variable to specified memory scope.&quot; TypeName=&quot;MemorySet&quot; IsAppend=&quot;True&quot; DisplayName=&quot;Set Memory&quot; /&gt;&lt;/IfElseBranchActivity&gt;&lt;IfElseBranchActivity x:Name=&quot;ifElseBranchActivity2&quot;&gt;&lt;ns7:ReturnValue Formula=&quot;{x:Null}&quot; UseStoredValue=&quot;True&quot; ConditionNumber=&quot;0&quot; IsValid=&quot;True&quot; Value=&quot;Default Branch&quot; ConditionType=&quot;&quot; Description=&quot;Use a returned value of a previous activity.&quot; Type=&quot;StoredValue&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; ConditionName=&quot;&quot; TypeName=&quot;ReturnValue&quot; UseCustomeCondition=&quot;False&quot; x:Name=&quot;returnValue2&quot; UseBranchWhenTimeout=&quot;True&quot; DisplayName=&quot;Return Value&quot; /&gt;&lt;/IfElseBranchActivity&gt;&lt;/IfElseActivity&gt;&lt;/SequenceActivity&gt;&lt;/WhileActivity&gt;&lt;ns1:DisplayValue x:Name=&quot;displayValue1&quot; HostId=&quot;-2&quot; IsValid=&quot;True&quot; HostName=&quot;{x:Null}&quot; Timeout=&quot;00:01:00&quot; ValueToDisplay=&quot;%ServerList%&quot; DisplayName=&quot;Display Value&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; Description=&quot;Display a value to the log.&quot; TypeName=&quot;DisplayValue&quot; TimeInSeconds=&quot;0&quot; /&gt;&lt;/SequentialWorkflowActivity&gt;" />
  <Tags>
    <Tag id="56" name="Security">
    </Tag>
  </Tags>
</Workflow>