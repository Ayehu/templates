<?xml version="1.0" encoding="utf-8"?>
<Workflow>
  <WorkflowInfo Name="Alert when admin account created" Description="Alert when admin account is being created in Active Directory" Details="&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.0 Transitional//EN&quot;&gt;&#xD;&#xA;&lt;HTML&gt;&lt;HEAD&gt;&#xD;&#xA;&lt;META content=&quot;text/html; charset=utf-8&quot; http-equiv=Content-Type&gt;&#xD;&#xA;&lt;META name=GENERATOR content=&quot;MSHTML 11.00.9600.16476&quot;&gt;&lt;/HEAD&gt;&#xD;&#xA;&lt;BODY&gt;&lt;SPAN &#xD;&#xA;style=&quot;FONT-SIZE: 11pt; FONT-FAMILY: 'Calibri','sans-serif'; LINE-HEIGHT: 115%; mso-fareast-font-family: Calibri; mso-bidi-font-family: Arial; mso-ansi-language: EN-US; mso-fareast-language: EN-US; mso-bidi-language: HE&quot;&gt;This &#xD;&#xA;process searches for a specific event code in the Security Eventlog, and if &#xD;&#xA;exists sends the relevant records in the form of an HTML table by email. &#xD;&#xA;Schedule this process to run on an hourly basis to help you keep track of &#xD;&#xA;security breaches in your organization.&lt;/SPAN&gt; &lt;/BODY&gt;&lt;/HTML&gt;&#xD;&#xA;" XML="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&lt;SequentialWorkflowActivity x:Name=&quot;CustomWorkflow&quot; xmlns:ns0=&quot;clr-namespace:GetWindowEventLogs;Assembly=GetWindowEventLogs, Version=2.0.0.0, Culture=neutral, PublicKeyToken=null&quot; xmlns:ns1=&quot;clr-namespace:GetRowsCount;Assembly=GetRowsCount, Version=2.0.0.0, Culture=neutral, PublicKeyToken=null&quot; xmlns:ns2=&quot;clr-namespace:ReturnValue;Assembly=ReturnValue, Version=2.0.0.0, Culture=neutral, PublicKeyToken=null&quot; xmlns:ns3=&quot;clr-namespace:ConvertToHTMLTable;Assembly=ConvertToHTMLTable, Version=2.0.0.0, Culture=neutral, PublicKeyToken=null&quot; xmlns:ns4=&quot;clr-namespace:SendEmail;Assembly=SendEmail, Version=2.0.0.0, Culture=neutral, PublicKeyToken=null&quot; xmlns:ns5=&quot;clr-namespace:Continue;Assembly=Continue, Version=2.0.0.0, Culture=neutral, PublicKeyToken=null&quot; xmlns:x=&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot; xmlns=&quot;http://schemas.microsoft.com/winfx/2006/xaml/workflow&quot; x:Class=&quot;WorkflowDesignerControl.CustomWorkflow&quot;&gt;&lt;ns0:GetWindowEventLogs Password=&quot;&quot; Description=&quot;Get the logs of the windows according     to the event type.&quot; TimeInSeconds=&quot;0&quot; FilterComputer=&quot;&quot; HostName=&quot;LocalHost&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; DisplayName=&quot;Get Windows Event Logs&quot; IsValid=&quot;True&quot; HostId=&quot;1&quot; FilterSource=&quot;&quot; FilterDescription=&quot;Administrators&quot; FilterEventCode=&quot;636&quot; FilterUser=&quot;&quot; MaxAge=&quot;01:00:00&quot; x:Name=&quot;getWindowEventLogs1&quot; Timeout=&quot;00:01:00&quot; FilterType=&quot;&quot; UserName=&quot;&quot; EventType=&quot;Security&quot; FilterCategory=&quot;&quot; TypeName=&quot;GetWindowEventLogs&quot; /&gt;&lt;ns1:GetRowsCount IsValid=&quot;True&quot; x:Name=&quot;getRowsCount1&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; ResultSet=&quot;%getWindowEventLogs1%&quot; DisplayName=&quot;Get Rows Count&quot; ResultSetName=&quot;getWindowEventLogs1&quot; Description=&quot;Gets the     amount of rows in a resultset.&quot; TypeName=&quot;GetRowsCount&quot; /&gt;&lt;IfElseActivity x:Name=&quot;ifElseActivity1&quot;&gt;&lt;IfElseBranchActivity x:Name=&quot;ifElseBranchActivity1&quot;&gt;&lt;ns2:ReturnValue Value=&quot;0&quot; IsValid=&quot;True&quot; x:Name=&quot;returnValue2&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; ConditionName=&quot;&quot; UseBranchWhenTimeout=&quot;False&quot; UseStoredValue=&quot;False&quot; ConditionType=&quot;Not Equals&quot; DisplayName=&quot;Return Value&quot; Formula=&quot;=Not     Equals(&amp;quot;&amp;amp;&amp;amp;&amp;amp;&amp;quot;,&amp;quot;0&amp;quot;)&quot; Description=&quot;Use a returned value of a previous activity.&quot; ConditionNumber=&quot;-1&quot; UseCustomeCondition=&quot;False&quot; Type=&quot;UserDefinedValue&quot; TypeName=&quot;ReturnValue&quot; /&gt;&lt;ns3:ConvertToHTMLTable Value=&quot;%getWindowEventLogs1%&quot; IsValid=&quot;True&quot; x:Name=&quot;convertToHTMLTable1&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; Description=&quot;Convert a ResultSet     to an HTML table.&quot; DisplayName=&quot;Convert to HTML     Table&quot; TypeName=&quot;ConvertToHTMLTable&quot; /&gt;&lt;ns4:SendEmail Channel=&quot;0&quot; TimeInSeconds=&quot;0&quot; Subject=&quot;Admin account was created in the last hour&quot; DestinationNumber=&quot;1&quot; x:Name=&quot;sendEmail1&quot; TemplateNumber=&quot;0&quot; ShiftLevel=&quot;&quot; IsValid=&quot;True&quot; HostId=&quot;-2&quot; TemplateName=&quot;&quot; TypeName=&quot;SendEmail&quot; SendRN=&quot;False&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; DestinationTypeCc=&quot;User&quot; DestinationType=&quot;User&quot; HostName=&quot;{x:Null}&quot; Timeout=&quot;00:00:00&quot; DisplayName=&quot;Send Email&quot; Attachments=&quot;&quot; Cc=&quot;&quot; Description=&quot;Send     an email to a user, a group or a duty.&quot; Continue=&quot;False&quot; DestinationNumberCc=&quot;0&quot; Body=&quot;&amp;lt;!DOCTYPE HTML PUBLIC &amp;quot;-//W3C//DTD HTML 4.0 Transitional//EN&amp;quot;&amp;gt;&amp;#xD;&amp;#xA;&amp;lt;HTML&amp;gt;&amp;lt;HEAD&amp;gt;&amp;#xD;&amp;#xA;&amp;lt;META content=&amp;quot;text/html; charset=windows-1252&amp;quot; http-equiv=Content-Type&amp;gt;&amp;#xD;&amp;#xA;&amp;lt;META name=GENERATOR content=&amp;quot;MSHTML 11.00.9600.16476&amp;quot;&amp;gt;&amp;lt;/HEAD&amp;gt;&amp;#xD;&amp;#xA;&amp;lt;BODY&amp;gt;&amp;lt;PRE&amp;gt;&amp;lt;PRE&amp;gt;%convertToHTMLTable1%&amp;lt;/PRE&amp;gt;&amp;lt;/PRE&amp;gt;&amp;lt;/BODY&amp;gt;&amp;lt;/HTML&amp;gt;&amp;#xD;&amp;#xA;&quot; To=&quot;Admin&quot; ShiftLevelCc=&quot;&quot; MessageType=&quot;Custom&quot; /&gt;&lt;/IfElseBranchActivity&gt;&lt;IfElseBranchActivity x:Name=&quot;ifElseBranchActivity2&quot;&gt;&lt;ns2:ReturnValue Value=&quot;&quot; IsValid=&quot;True&quot; x:Name=&quot;returnValue1&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; ConditionName=&quot;&quot; UseBranchWhenTimeout=&quot;True&quot; UseStoredValue=&quot;True&quot; ConditionType=&quot;&quot; DisplayName=&quot;Return Value&quot; Formula=&quot;=Equals(&amp;amp;&amp;amp;&amp;amp;,)&quot; Description=&quot;Use a returned value of a previous activity.&quot; ConditionNumber=&quot;-1&quot; UseCustomeCondition=&quot;False&quot; Type=&quot;DefaultBranch&quot; TypeName=&quot;ReturnValue&quot; /&gt;&lt;ns5:Continue DisplayName=&quot;Continue&quot; x:Name=&quot;continue1&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; IsValid=&quot;True&quot; TypeName=&quot;Continue&quot; Description=&quot;Continue the current workfow or branch&quot; /&gt;&lt;/IfElseBranchActivity&gt;&lt;/IfElseActivity&gt;&lt;/SequentialWorkflowActivity&gt;" />
  <Tags>
    <Tag id="47" name="NetApp">
    </Tag>
  </Tags>
</Workflow>