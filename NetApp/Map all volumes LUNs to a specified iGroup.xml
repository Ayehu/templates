<?xml version="1.0" encoding="utf-8"?>
<Workflow>
  <WorkflowInfo Name="Map all volumes LUNs to a specified iGroup" Description="Map all volume's LUNs to an iGroup" Details="&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.0 Transitional//EN&quot;&gt;&#xD;&#xA;&lt;HTML&gt;&lt;HEAD&gt;&#xD;&#xA;&lt;META content=&quot;text/html; charset=utf-8&quot; http-equiv=Content-Type&gt;&#xD;&#xA;&lt;META name=GENERATOR content=&quot;MSHTML 8.00.7601.17514&quot;&gt;&lt;/HEAD&gt;&#xD;&#xA;&lt;BODY style=&quot;BACKGROUND-COLOR: white&quot;&gt;&#xD;&#xA;&lt;P&gt;&lt;FONT face=Calibri&gt;&lt;STRONG&gt;Information&lt;/STRONG&gt;&lt;BR&gt;&lt;SPAN &#xD;&#xA;style=&quot;LINE-HEIGHT: 150%; FONT-FAMILY: 'Calibri',sans-serif; FONT-SIZE: 12pt; mso-bidi-font-size: 11.0pt; mso-fareast-font-family: 'Times New Roman'; mso-bidi-font-family: Calibri; mso-ansi-language: EN-US; mso-fareast-language: EN-US; mso-bidi-language: HE&quot;&gt;&lt;SPAN &#xD;&#xA;style=&quot;LINE-HEIGHT: 150%; FONT-FAMILY: 'Calibri',sans-serif; FONT-SIZE: 12pt; mso-bidi-font-size: 11.0pt; mso-fareast-font-family: 'Times New Roman'; mso-bidi-font-family: Calibri; mso-ansi-language: EN-US; mso-fareast-language: EN-US; mso-bidi-language: HE&quot;&gt;&lt;SPAN &#xD;&#xA;style=&quot;LINE-HEIGHT: 150%; FONT-FAMILY: 'Calibri',sans-serif; FONT-SIZE: 12pt; mso-bidi-font-size: 11.0pt; mso-fareast-font-family: 'Times New Roman'; mso-bidi-font-family: Calibri; mso-ansi-language: EN-US; mso-fareast-language: EN-US; mso-bidi-language: HE&quot;&gt;This &#xD;&#xA;workflow maps all volume's LUNs to a specified iGroup&lt;/SPAN&gt;.&lt;/SPAN&gt;&lt;/SPAN&gt; This &#xD;&#xA;workflow&amp;nbsp;should be triggered by a Self Service &#xD;&#xA;request.&lt;BR&gt;&lt;BR&gt;&lt;STRONG&gt;Requirements: &lt;/STRONG&gt;&lt;BR&gt;* NetApp module is configured &#xD;&#xA;and Up.&lt;BR&gt;&lt;/FONT&gt;&lt;FONT face=Calibri&gt;&lt;BR&gt;&lt;STRONG&gt;Input &#xD;&#xA;Variables&lt;/STRONG&gt;&amp;nbsp;(variables recieved from the Self Service request): &#xD;&#xA;&lt;BR&gt;* &lt;EM&gt;NetApp Cluster&lt;BR&gt;* Vserver&lt;BR&gt;* iGroup&lt;BR&gt;* Volume &#xD;&#xA;Name&lt;BR&gt;&lt;/EM&gt;&lt;/FONT&gt;&lt;FONT &#xD;&#xA;face=Calibri&gt;&lt;STRONG&gt;&lt;BR&gt;Output&lt;BR&gt;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;FONT face=Calibri&gt;A report &#xD;&#xA;table containing the LUNs' paths and ID's.&lt;/FONT&gt;&lt;/P&gt;&lt;/BODY&gt;&lt;/HTML&gt;&#xD;&#xA;" XML="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&lt;SequentialWorkflowActivity x:Name=&quot;CustomWorkflow&quot; xmlns:ns0=&quot;clr-namespace:NetAppGetObject;Assembly=NetAppGetObject, Version=4.8.0.0, Culture=neutral, PublicKeyToken=null&quot; xmlns:ns1=&quot;clr-namespace:GetRowsCount;Assembly=GetRowsCount, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null&quot; xmlns:ns2=&quot;clr-namespace:CreateMemoryTable;Assembly=CreateMemoryTable, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null&quot; xmlns:ns3=&quot;clr-namespace:SelfServiceResponse;Assembly=SelfServiceResponse, Version=4.7.0.0, Culture=neutral, PublicKeyToken=null&quot; xmlns:ns4=&quot;clr-namespace:ReturnValue;Assembly=ReturnValue, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null&quot; xmlns:ns5=&quot;clr-namespace:TerminateWorkflow;Assembly=TerminateWorkflow, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null&quot; xmlns:ns6=&quot;clr-namespace:Continue;Assembly=Continue, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null&quot; xmlns:ns7=&quot;clr-namespace:ExitWhile;Assembly=ExitWhile, Version=4.6.1.0, Culture=neutral, PublicKeyToken=null&quot; xmlns:ns8=&quot;clr-namespace:GetCellValue;Assembly=GetCellValue, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null&quot; xmlns:ns9=&quot;clr-namespace:SortTable;Assembly=SortTable, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null&quot; xmlns:ns10=&quot;clr-namespace:FunctionCalculator;Assembly=FunctionCalculator, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null&quot; xmlns:ns11=&quot;clr-namespace:MemorySet;Assembly=MemorySet, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null&quot; xmlns:ns12=&quot;clr-namespace:NetAppMapLun;Assembly=NetAppMapLun, Version=4.7.0.0, Culture=neutral, PublicKeyToken=null&quot; xmlns:ns13=&quot;clr-namespace:SetCellValue;Assembly=SetCellValue, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null&quot; xmlns:ns14=&quot;clr-namespace:AddMemoryTableRow;Assembly=AddMemoryTableRow, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null&quot; xmlns:x=&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot; xmlns=&quot;http://schemas.microsoft.com/winfx/2006/xaml/workflow&quot; x:Class=&quot;WorkflowDesignerControl.CustomWorkflow&quot;&gt;&lt;ns0:NetAppGetObject TypeName=&quot;NetAppGetObject&quot; HostId=&quot;-2&quot; UserName=&quot;&quot; SelectedModuleType=&quot;31&quot; HostName=&quot;%NetAppCluster%&quot; SelectedModuleID=&quot;9&quot; Timeout=&quot;00:05:00&quot; Description=&quot;Get objects according to specific criteria.&quot; Password=&quot;&quot; DisplayName=&quot;NetApp Get Object&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; SelectedModuleName=&quot;NetApp&quot; TimeInSeconds=&quot;0&quot; ObjectName=&quot;Luns&quot; XMLTableResult=&quot;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;utf-8&amp;quot;?&amp;gt;&amp;lt;FilterParameters&amp;gt;&amp;lt;ObjectName&amp;gt;Luns&amp;lt;/ObjectName&amp;gt;&amp;lt;FilterItems&amp;gt;&amp;lt;FilterItem&amp;gt;&amp;lt;FilterName&amp;gt;Online&amp;lt;/FilterName&amp;gt;&amp;lt;Operator&amp;gt;Equals&amp;lt;/Operator&amp;gt;&amp;lt;Valueitems&amp;gt;&amp;lt;FilterValue&amp;gt;True&amp;lt;/FilterValue&amp;gt;&amp;lt;/Valueitems&amp;gt;&amp;lt;VariableType&amp;gt;Boolean&amp;lt;/VariableType&amp;gt;&amp;lt;/FilterItem&amp;gt;&amp;lt;FilterItem&amp;gt;&amp;lt;FilterName&amp;gt;Containing Volume&amp;lt;/FilterName&amp;gt;&amp;lt;Operator&amp;gt;Equals&amp;lt;/Operator&amp;gt;&amp;lt;Valueitems&amp;gt;&amp;lt;FilterValue&amp;gt;%VolumeName%&amp;lt;/FilterValue&amp;gt;&amp;lt;/Valueitems&amp;gt;&amp;lt;VariableType&amp;gt;String&amp;lt;/VariableType&amp;gt;&amp;lt;/FilterItem&amp;gt;&amp;lt;FilterItem&amp;gt;&amp;lt;FilterName&amp;gt;Vserver&amp;lt;/FilterName&amp;gt;&amp;lt;Operator&amp;gt;Equals&amp;lt;/Operator&amp;gt;&amp;lt;Valueitems&amp;gt;&amp;lt;FilterValue&amp;gt;%Vserver%&amp;lt;/FilterValue&amp;gt;&amp;lt;/Valueitems&amp;gt;&amp;lt;VariableType&amp;gt;String&amp;lt;/VariableType&amp;gt;&amp;lt;/FilterItem&amp;gt;&amp;lt;/FilterItems&amp;gt;&amp;lt;/FilterParameters&amp;gt;&quot; x:Name=&quot;getLuns&quot; IsValid=&quot;True&quot; /&gt;&lt;ns1:GetRowsCount x:Name=&quot;getLunsCount&quot; IsValid=&quot;True&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; Description=&quot;Gets the amount of rows in a resultset.&quot; TypeName=&quot;GetRowsCount&quot; ResultSetName=&quot;getLuns&quot; ResultSet=&quot;%getLuns%&quot; DisplayName=&quot;Get Rows Count&quot; /&gt;&lt;IfElseActivity x:Name=&quot;ifElseActivity2&quot;&gt;&lt;IfElseBranchActivity x:Name=&quot;ifElseBranchActivity3&quot;&gt;&lt;ns4:ReturnValue Formula=&quot;=Equals(&amp;quot;&amp;amp;&amp;amp;&amp;amp;&amp;quot;,&amp;quot;0&amp;quot;)&quot; UseStoredValue=&quot;False&quot; ConditionNumber=&quot;-1&quot; IsValid=&quot;True&quot; Value=&quot;0&quot; ConditionType=&quot;Equals&quot; Description=&quot;Use a returned value of a previous activity.&quot; Type=&quot;UserDefinedValue&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; ConditionName=&quot;&quot; TypeName=&quot;ReturnValue&quot; UseCustomeCondition=&quot;False&quot; x:Name=&quot;ifNoLuns&quot; UseBranchWhenTimeout=&quot;False&quot; DisplayName=&quot;Return Value&quot; /&gt;&lt;ns5:TerminateWorkflow x:Name=&quot;terminateWorkflow1&quot; IsValid=&quot;True&quot; DisplayName=&quot;Terminate Workflow&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; Description=&quot;Terminate entire workflow&quot; TypeName=&quot;TerminateWorkflow&quot; TerminationReason=&quot;No Luns found in volume , vserver&quot; /&gt;&lt;/IfElseBranchActivity&gt;&lt;IfElseBranchActivity x:Name=&quot;ifElseBranchActivity4&quot;&gt;&lt;ns4:ReturnValue Formula=&quot;=Equals(&amp;amp;&amp;amp;&amp;amp;,)&quot; UseStoredValue=&quot;True&quot; ConditionNumber=&quot;-1&quot; IsValid=&quot;True&quot; Value=&quot;&quot; ConditionType=&quot;&quot; Description=&quot;Use a returned value of a previous activity.&quot; Type=&quot;DefaultBranch&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; ConditionName=&quot;&quot; TypeName=&quot;ReturnValue&quot; UseCustomeCondition=&quot;False&quot; x:Name=&quot;ifLunsExistInVolume&quot; UseBranchWhenTimeout=&quot;True&quot; DisplayName=&quot;Return Value&quot; /&gt;&lt;ns6:Continue RecoveryMethodSelection=&quot;{x:Null}&quot; x:Name=&quot;continueExecution&quot; TypeName=&quot;Continue&quot; DisplayName=&quot;Continue&quot; Description=&quot;Continue the current workfow or branch&quot; IsValid=&quot;True&quot; /&gt;&lt;/IfElseBranchActivity&gt;&lt;/IfElseActivity&gt;&lt;ns2:CreateMemoryTable x:Name=&quot;ReportTable&quot; TableAsString=&quot;&amp;lt;NewDataSet&amp;gt;&amp;#xD;&amp;#xA;  &amp;lt;xs:schema id=&amp;quot;NewDataSet&amp;quot; xmlns=&amp;quot;&amp;quot; xmlns:xs=&amp;quot;http://www.w3.org/2001/XMLSchema&amp;quot; xmlns:msdata=&amp;quot;urn:schemas-microsoft-com:xml-msdata&amp;quot;&amp;gt;&amp;#xD;&amp;#xA;    &amp;lt;xs:element name=&amp;quot;NewDataSet&amp;quot; msdata:IsDataSet=&amp;quot;true&amp;quot; msdata:MainDataTable=&amp;quot;resultSet&amp;quot; msdata:UseCurrentLocale=&amp;quot;true&amp;quot;&amp;gt;&amp;#xD;&amp;#xA;      &amp;lt;xs:complexType&amp;gt;&amp;#xD;&amp;#xA;        &amp;lt;xs:choice minOccurs=&amp;quot;0&amp;quot; maxOccurs=&amp;quot;unbounded&amp;quot;&amp;gt;&amp;#xD;&amp;#xA;          &amp;lt;xs:element name=&amp;quot;resultSet&amp;quot;&amp;gt;&amp;#xD;&amp;#xA;            &amp;lt;xs:complexType&amp;gt;&amp;#xD;&amp;#xA;              &amp;lt;xs:sequence&amp;gt;&amp;#xD;&amp;#xA;                &amp;lt;xs:element name=&amp;quot;LUN_x0020_Path&amp;quot; type=&amp;quot;xs:string&amp;quot; minOccurs=&amp;quot;0&amp;quot; /&amp;gt;&amp;#xD;&amp;#xA;                &amp;lt;xs:element name=&amp;quot;LUN_x0020_ID&amp;quot; type=&amp;quot;xs:string&amp;quot; minOccurs=&amp;quot;0&amp;quot; /&amp;gt;&amp;#xD;&amp;#xA;              &amp;lt;/xs:sequence&amp;gt;&amp;#xD;&amp;#xA;            &amp;lt;/xs:complexType&amp;gt;&amp;#xD;&amp;#xA;          &amp;lt;/xs:element&amp;gt;&amp;#xD;&amp;#xA;        &amp;lt;/xs:choice&amp;gt;&amp;#xD;&amp;#xA;      &amp;lt;/xs:complexType&amp;gt;&amp;#xD;&amp;#xA;    &amp;lt;/xs:element&amp;gt;&amp;#xD;&amp;#xA;  &amp;lt;/xs:schema&amp;gt;&amp;#xD;&amp;#xA;  &amp;lt;resultSet&amp;gt;&amp;#xD;&amp;#xA;    &amp;lt;LUN_x0020_Path /&amp;gt;&amp;#xD;&amp;#xA;    &amp;lt;LUN_x0020_ID /&amp;gt;&amp;#xD;&amp;#xA;  &amp;lt;/resultSet&amp;gt;&amp;#xD;&amp;#xA;&amp;lt;/NewDataSet&amp;gt;&quot; RowNumber=&quot;1&quot; isEmptyGrid=&quot;0&quot; ColumnNumber=&quot;2&quot; TableName=&quot;Report&quot; Description=&quot;Creates a memory table.&quot; TypeName=&quot;CreateMemoryTable&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; DisplayName=&quot;Create Memory Table&quot; IsValid=&quot;True&quot; /&gt;&lt;WhileActivity x:Name=&quot;whileActivity1&quot; Condition=&quot;{x:Null}&quot;&gt;&lt;SequenceActivity x:Name=&quot;sequenceActivity1&quot;&gt;&lt;ns7:ExitWhile x:Name=&quot;numLuns&quot; IsValid=&quot;True&quot; Counter=&quot;%getLunsCount%&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; Description=&quot;Exit current while activity&quot; TypeName=&quot;ExitWhile&quot; DisplayName=&quot;Exit While&quot; /&gt;&lt;ns8:GetCellValue x:Name=&quot;currentLunPath&quot; IsValid=&quot;True&quot; RowNumber=&quot;%numLuns%&quot; ColumnType=&quot;Name&quot; ColumnNumber=&quot;Path&quot; Description=&quot;Gets a specific cell value from a resultset.&quot; TypeName=&quot;GetCellValue&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; ResultSetName=&quot;getLuns&quot; ResultSet=&quot;%getLuns%&quot; DisplayName=&quot;Get Cell Value&quot; /&gt;&lt;ns0:NetAppGetObject TypeName=&quot;NetAppGetObject&quot; HostId=&quot;-2&quot; UserName=&quot;&quot; SelectedModuleType=&quot;31&quot; HostName=&quot;%NetAppCluster%&quot; SelectedModuleID=&quot;9&quot; Timeout=&quot;00:05:00&quot; Description=&quot;Get objects according to specific criteria.&quot; Password=&quot;&quot; DisplayName=&quot;NetApp Get Object&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; SelectedModuleName=&quot;NetApp&quot; TimeInSeconds=&quot;0&quot; ObjectName=&quot;Lun Maps&quot; XMLTableResult=&quot;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;utf-8&amp;quot;?&amp;gt;&amp;lt;FilterParameters&amp;gt;&amp;lt;ObjectName&amp;gt;Lun Maps&amp;lt;/ObjectName&amp;gt;&amp;lt;FilterItems&amp;gt;&amp;lt;FilterItem&amp;gt;&amp;lt;FilterName&amp;gt;Vserver&amp;lt;/FilterName&amp;gt;&amp;lt;Operator&amp;gt;Equals&amp;lt;/Operator&amp;gt;&amp;lt;Valueitems&amp;gt;&amp;lt;FilterValue&amp;gt;%Vserver%&amp;lt;/FilterValue&amp;gt;&amp;lt;/Valueitems&amp;gt;&amp;lt;VariableType&amp;gt;String&amp;lt;/VariableType&amp;gt;&amp;lt;/FilterItem&amp;gt;&amp;lt;FilterItem&amp;gt;&amp;lt;FilterName&amp;gt;Initiator Group&amp;lt;/FilterName&amp;gt;&amp;lt;Operator&amp;gt;Equals&amp;lt;/Operator&amp;gt;&amp;lt;Valueitems&amp;gt;&amp;lt;FilterValue&amp;gt;%iGroup%&amp;lt;/FilterValue&amp;gt;&amp;lt;/Valueitems&amp;gt;&amp;lt;VariableType&amp;gt;String&amp;lt;/VariableType&amp;gt;&amp;lt;/FilterItem&amp;gt;&amp;lt;/FilterItems&amp;gt;&amp;lt;/FilterParameters&amp;gt;&quot; x:Name=&quot;NetAppGetObject2&quot; IsValid=&quot;True&quot; /&gt;&lt;ns9:SortTable x:Name=&quot;LunsByMapIdDesc&quot; NameType=&quot;0&quot; IsValid=&quot;True&quot; SortStatement=&quot;LunId DESC&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; Description=&quot;Sorts the specified table by the specified columns.&quot; TypeName=&quot;SortTable&quot; ResultSetName=&quot;%NetAppGetObject2%&quot; DisplayName=&quot;Sort Table&quot; /&gt;&lt;ns1:GetRowsCount x:Name=&quot;getRowsCount3&quot; IsValid=&quot;True&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; Description=&quot;Gets the amount of rows in a resultset.&quot; TypeName=&quot;GetRowsCount&quot; ResultSetName=&quot;LunsByMapIdDesc&quot; ResultSet=&quot;%LunsByMapIdDesc%&quot; DisplayName=&quot;Get Rows Count&quot; /&gt;&lt;IfElseActivity x:Name=&quot;ifElseActivity3&quot;&gt;&lt;IfElseBranchActivity x:Name=&quot;ifElseBranchActivity5&quot;&gt;&lt;ns4:ReturnValue Formula=&quot;=&amp;amp;&amp;amp;&amp;amp; &amp;gt; 0&quot; UseStoredValue=&quot;False&quot; ConditionNumber=&quot;-1&quot; IsValid=&quot;True&quot; Value=&quot;0&quot; ConditionType=&quot;&amp;gt;&quot; Description=&quot;Use a returned value of a previous activity.&quot; Type=&quot;UserDefinedValue&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; ConditionName=&quot;&quot; TypeName=&quot;ReturnValue&quot; UseCustomeCondition=&quot;False&quot; x:Name=&quot;ifLunsExist&quot; UseBranchWhenTimeout=&quot;False&quot; DisplayName=&quot;Return Value&quot; /&gt;&lt;ns8:GetCellValue x:Name=&quot;HighestLunId&quot; IsValid=&quot;True&quot; RowNumber=&quot;1&quot; ColumnType=&quot;Name&quot; ColumnNumber=&quot;LunId&quot; Description=&quot;Gets a specific cell value from a resultset.&quot; TypeName=&quot;GetCellValue&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; ResultSetName=&quot;LunsByMapIdDesc&quot; ResultSet=&quot;%LunsByMapIdDesc%&quot; DisplayName=&quot;Get Cell Value&quot; /&gt;&lt;ns10:FunctionCalculator x:Name=&quot;nextFreeLunId&quot; IsValid=&quot;True&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; Description=&quot;Calculate a function&quot; TypeName=&quot;FunctionCalculator&quot; Formula=&quot;%HighestLunId%+1&quot; DisplayName=&quot;Function Calculator&quot; /&gt;&lt;ns11:MemorySet x:Name=&quot;setAvailableLunId&quot; IsSaved=&quot;False&quot; IsValid=&quot;True&quot; VariableScope=&quot;Workflow&quot; VariableValue=&quot;%nextFreeLunId%&quot; VariableName=&quot;nextAvailableLunId&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; Description=&quot;Set variable to specified memory scope.&quot; TypeName=&quot;MemorySet&quot; IsAppend=&quot;False&quot; DisplayName=&quot;Set Memory&quot; /&gt;&lt;/IfElseBranchActivity&gt;&lt;IfElseBranchActivity x:Name=&quot;ifElseBranchActivity6&quot;&gt;&lt;ns4:ReturnValue Formula=&quot;{x:Null}&quot; UseStoredValue=&quot;True&quot; ConditionNumber=&quot;0&quot; IsValid=&quot;True&quot; Value=&quot;Default Branch&quot; ConditionType=&quot;&quot; Description=&quot;Use a returned value of a previous activity.&quot; Type=&quot;StoredValue&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; ConditionName=&quot;&quot; TypeName=&quot;ReturnValue&quot; UseCustomeCondition=&quot;False&quot; x:Name=&quot;ifNoLunsExistInList&quot; UseBranchWhenTimeout=&quot;True&quot; DisplayName=&quot;Return Value&quot; /&gt;&lt;ns11:MemorySet x:Name=&quot;LunId1setAvailableLunIdTo1&quot; IsSaved=&quot;False&quot; IsValid=&quot;True&quot; VariableScope=&quot;Workflow&quot; VariableValue=&quot;1&quot; VariableName=&quot;nextAvailableLunId&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; Description=&quot;Set variable to specified memory scope.&quot; TypeName=&quot;MemorySet&quot; IsAppend=&quot;False&quot; DisplayName=&quot;Set Memory&quot; /&gt;&lt;/IfElseBranchActivity&gt;&lt;/IfElseActivity&gt;&lt;IfElseActivity x:Name=&quot;ifElseActivity1&quot;&gt;&lt;IfElseBranchActivity x:Name=&quot;ifElseBranchActivity1&quot;&gt;&lt;ns4:ReturnValue Formula=&quot;=&amp;amp;&amp;amp;&amp;amp; &amp;lt;= 250&quot; UseStoredValue=&quot;False&quot; ConditionNumber=&quot;-1&quot; IsValid=&quot;True&quot; Value=&quot;250&quot; ConditionType=&quot;&amp;lt;=&quot; Description=&quot;Use a returned value of a previous activity.&quot; Type=&quot;UserDefinedValue&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; ConditionName=&quot;&quot; TypeName=&quot;ReturnValue&quot; UseCustomeCondition=&quot;False&quot; x:Name=&quot;ifAvailableIdFound&quot; UseBranchWhenTimeout=&quot;False&quot; DisplayName=&quot;Return Value&quot; /&gt;&lt;ns1:GetRowsCount x:Name=&quot;numMappedLuns&quot; IsValid=&quot;True&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; Description=&quot;Gets the amount of rows in a resultset.&quot; TypeName=&quot;GetRowsCount&quot; ResultSetName=&quot;Report&quot; ResultSet=&quot;%Report%&quot; DisplayName=&quot;Get Rows Count&quot; /&gt;&lt;ns12:NetAppMapLun TypeName=&quot;NetAppMapLun&quot; HostId=&quot;-2&quot; SelectedModuleType=&quot;23&quot; HostName=&quot;%NetAppCluster%&quot; SelectedModuleID=&quot;9&quot; Username=&quot;&quot; Password=&quot;&quot; LunPath=&quot;%currentLunPath%&quot; DisplayName=&quot;NetApp Map Lun&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; SelectedModuleName=&quot;NetApp&quot; TimeInSeconds=&quot;0&quot; Description=&quot;Map Lun&quot; LunId=&quot;%nextAvailableLunId%&quot; IsValid=&quot;True&quot; IGroup=&quot;%iGroup%&quot; Timeout=&quot;00:01:00&quot; Vserver=&quot;%vserver%&quot; x:Name=&quot;NetAppMapLun1&quot; /&gt;&lt;ns13:SetCellValue x:Name=&quot;saveLunPath&quot; NewValue=&quot;%currentLunPath%&quot; IsValid=&quot;True&quot; RowNumber=&quot;%numLuns%&quot; VariableName=&quot;%Report%&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; Description=&quot;Set a new value to a result set.&quot; TypeName=&quot;SetCellValue&quot; ColumnType=&quot;Number&quot; ColNumber=&quot;1&quot; DisplayName=&quot;Set Cell Value&quot; /&gt;&lt;ns13:SetCellValue x:Name=&quot;saveLunId&quot; NewValue=&quot;%nextAvailableLunId%&quot; IsValid=&quot;True&quot; RowNumber=&quot;%numLuns%&quot; VariableName=&quot;%Report%&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; Description=&quot;Set a new value to a result set.&quot; TypeName=&quot;SetCellValue&quot; ColumnType=&quot;Number&quot; ColNumber=&quot;2&quot; DisplayName=&quot;Set Cell Value&quot; /&gt;&lt;ns14:AddMemoryTableRow x:Name=&quot;newLine&quot; IsValid=&quot;True&quot; RowNumber=&quot;&quot; ResultSetName=&quot;Report&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; Description=&quot;Add a memory table row.&quot; TypeName=&quot;AddMemoryTableRow&quot; Selection=&quot;2&quot; NumberOfRows=&quot;1&quot; ResultSet=&quot;%Report%&quot; DisplayName=&quot;Add Row to Memory Table&quot; /&gt;&lt;/IfElseBranchActivity&gt;&lt;IfElseBranchActivity x:Name=&quot;ifElseBranchActivity2&quot;&gt;&lt;ns4:ReturnValue Formula=&quot;=Equals(&amp;amp;&amp;amp;&amp;amp;,)&quot; UseStoredValue=&quot;True&quot; ConditionNumber=&quot;-1&quot; IsValid=&quot;True&quot; Value=&quot;&quot; ConditionType=&quot;&quot; Description=&quot;Use a returned value of a previous activity.&quot; Type=&quot;DefaultBranch&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; ConditionName=&quot;&quot; TypeName=&quot;ReturnValue&quot; UseCustomeCondition=&quot;False&quot; x:Name=&quot;ifNotIdFound&quot; UseBranchWhenTimeout=&quot;True&quot; DisplayName=&quot;Return Value&quot; /&gt;&lt;ns6:Continue RecoveryMethodSelection=&quot;{x:Null}&quot; x:Name=&quot;continue1&quot; TypeName=&quot;Continue&quot; DisplayName=&quot;Continue&quot; Description=&quot;Continue the current workfow or branch&quot; IsValid=&quot;True&quot; /&gt;&lt;/IfElseBranchActivity&gt;&lt;/IfElseActivity&gt;&lt;/SequenceActivity&gt;&lt;/WhileActivity&gt;&lt;ns3:SelfServiceResponse x:Name=&quot;selfServiceResponse1&quot; IsValid=&quot;True&quot; DisplayName=&quot;SelfService Response&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; Description=&quot;Send response to self service request&quot; TypeName=&quot;SelfServiceResponse&quot; TerminationReason=&quot;%Report%&quot; /&gt;&lt;/SequentialWorkflowActivity&gt;" />
  <Tags>
    <Tag id="47" name="NetApp">
    </Tag>
  </Tags>
</Workflow>